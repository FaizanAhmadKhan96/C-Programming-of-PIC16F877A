CCS PCM C Compiler, Version 5.015, 5967               29-Dec-18 14:06

               Filename:   E:\BEE-7D\Final Year Project\PIC Microcontroller\Switch\cv.lst

               ROM used:   32 words (0%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           6 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16F877.h> 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
.................... #fuses brownout,hs,nowdt,nolvp 
....................  
.................... #define LED pin_b0 
.................... #define SW pin_d0 
....................  
.................... void main() 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  BCF    03.7
.................... { 
....................  output_b(0b00000000); 
000D:  CLRF   06
000E:  BCF    03.5
000F:  CLRF   06
....................   
....................  while(1) 
....................  { 
....................  if(input(SW)==0) 
0010:  BSF    03.5
0011:  BSF    08.0
0012:  BCF    03.5
0013:  BTFSC  08.0
0014:  GOTO   01A
....................  { 
....................  output_high(LED); 
0015:  BSF    03.5
0016:  BCF    06.0
0017:  BCF    03.5
0018:  BSF    06.0
....................  } 
0019:  GOTO   01E
....................  else 
....................  { 
....................  output_low(LED); 
001A:  BSF    03.5
001B:  BCF    06.0
001C:  BCF    03.5
001D:  BCF    06.0
....................  } 
001E:  GOTO   010
....................  } 
.................... } 
001F:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT

CCS PCM C Compiler, Version 5.015, 5967               21-Oct-18 10:40

               Filename:   E:\BEE-7D\Final Year Project\PIC Microcontroller\Switch2\hg.lst

               ROM used:   48 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           6 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include<16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses HS,NOWDT,NOLVP,BROWNOUT 
....................  
.................... #define LED1 PIN_B0 
.................... #define LED2 PIN_B1 
.................... #define SW1 PIN_D0 
.................... #define SW2 PIN_D1 
....................  
.................... void main() 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  MOVLW  07
000D:  MOVWF  1C
000E:  BCF    03.7
.................... { 
.................... output_b(0b00000000); 
000F:  CLRF   06
0010:  BCF    03.5
0011:  CLRF   06
.................... while(1) 
.................... { 
....................  
.................... if(input(SW1)==0) 
0012:  BSF    03.5
0013:  BSF    08.0
0014:  BCF    03.5
0015:  BTFSC  08.0
0016:  GOTO   01C
.................... { 
.................... output_high(LED1); 
0017:  BSF    03.5
0018:  BCF    06.0
0019:  BCF    03.5
001A:  BSF    06.0
.................... } 
001B:  GOTO   020
.................... else 
.................... { 
.................... output_low(LED1); 
001C:  BSF    03.5
001D:  BCF    06.0
001E:  BCF    03.5
001F:  BCF    06.0
.................... } 
....................  
.................... if(input(SW2)==0) 
0020:  BSF    03.5
0021:  BSF    08.1
0022:  BCF    03.5
0023:  BTFSC  08.1
0024:  GOTO   02A
.................... { 
.................... output_high(LED2); 
0025:  BSF    03.5
0026:  BCF    06.1
0027:  BCF    03.5
0028:  BSF    06.1
.................... } 
0029:  GOTO   02E
.................... else 
.................... { 
.................... output_low(LED2); 
002A:  BSF    03.5
002B:  BCF    06.1
002C:  BCF    03.5
002D:  BCF    06.1
.................... } 
002E:  GOTO   012
.................... } 
.................... } 
002F:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT

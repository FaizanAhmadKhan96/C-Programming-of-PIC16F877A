CCS PCM C Compiler, Version 5.015, 5967               02-Feb-19 18:56

               Filename:   E:\BEE-7D\Final Year Project\PIC Microcontroller\Charge controller\kbh.lst

               ROM used:   3517 words (43%)
                           Largest free fragment is 2048
               RAM used:   46 (12%) at main() level
                           75 (20%) worst case
               Stack used: 6 locations
               Stack size: 8

*
0000:  MOVLW  0B
0001:  MOVWF  0A
0002:  GOTO   316
0003:  NOP
.................... #include<16F877.h>  
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  28
0009:  RETLW  0C
000A:  RETLW  01
000B:  RETLW  06
000C:  DATA 55,38
000D:  DATA 76,10
000E:  DATA 3D,10
000F:  DATA 25,33
0010:  DATA 20,2B
0011:  DATA 00,00
0012:  DATA 55,31
0013:  DATA 61,3A
0014:  DATA A0,1E
0015:  DATA A0,12
0016:  DATA 66,10
0017:  DATA 56,00
0018:  DATA 49,31
0019:  DATA 61,3A
001A:  DATA A0,1E
001B:  DATA A0,12
001C:  DATA 66,10
001D:  DATA 41,10
001E:  DATA AB,15
001F:  DATA 2B,00
0020:  DATA 49,31
0021:  DATA 61,3A
0022:  DATA A0,1E
0023:  DATA A0,12
0024:  DATA 66,10
0025:  DATA 41,10
0026:  DATA AD,16
0027:  DATA 2D,00
0028:  DATA D4,32
0029:  DATA 6D,38
002A:  DATA A0,1E
002B:  DATA A0,12
002C:  DATA 66,10
002D:  DATA 43,00
002E:  DATA C9,31
002F:  DATA E8,30
0030:  DATA F2,33
0031:  DATA 65,10
0032:  DATA 3D,10
0033:  DATA 25,33
0034:  DATA A0,20
0035:  DATA 00,01
0036:  DATA 61,36
0037:  DATA 70,34
0038:  DATA 61,10
0039:  DATA 3D,10
003A:  DATA 25,33
003B:  DATA A5,12
003C:  DATA 00,01
003D:  DATA 46,39
003E:  DATA E5,38
003F:  DATA F5,32
0040:  DATA EE,31
0041:  DATA 79,10
0042:  DATA 3D,10
0043:  DATA 35,18
0044:  DATA 6B,24
0045:  DATA 7A,00
0046:  DATA 45,3C
0047:  DATA E3,32
0048:  DATA F3,39
0049:  DATA 69,3B
004A:  DATA 65,10
004B:  DATA E4,34
004C:  DATA F3,31
004D:  DATA E8,30
004E:  DATA F2,33
004F:  DATA 65,00
0050:  DATA CC,37
0051:  DATA 61,32
0052:  DATA 20,32
0053:  DATA E9,39
0054:  DATA E3,37
0055:  DATA 6E,37
0056:  DATA E5,31
0057:  DATA F4,32
0058:  DATA 64,00
*
0100:  BSF    0A.0
0101:  BCF    0A.1
0102:  BCF    0A.2
0103:  ADDWF  02,F
0104:  GOTO   0ED
0105:  GOTO   0F0
0106:  GOTO   0F3
0107:  GOTO   0F6
*
012F:  MOVLW  8E
0130:  MOVWF  77
0131:  MOVF   4D,W
0132:  MOVWF  78
0133:  MOVF   4C,W
0134:  MOVWF  79
0135:  CLRF   7A
0136:  MOVF   78,F
0137:  BTFSS  03.2
0138:  GOTO   143
0139:  MOVF   79,W
013A:  MOVWF  78
013B:  CLRF   79
013C:  MOVLW  08
013D:  SUBWF  77,F
013E:  MOVF   78,F
013F:  BTFSS  03.2
0140:  GOTO   143
0141:  CLRF   77
0142:  GOTO   14B
0143:  BCF    03.0
0144:  BTFSC  78.7
0145:  GOTO   14A
0146:  RLF    79,F
0147:  RLF    78,F
0148:  DECF   77,F
0149:  GOTO   143
014A:  BCF    78.7
014B:  RETURN
014C:  MOVF   48,W
014D:  BTFSC  03.2
014E:  GOTO   211
014F:  MOVWF  54
0150:  MOVF   4C,W
0151:  BTFSC  03.2
0152:  GOTO   211
0153:  SUBWF  54,F
0154:  BTFSS  03.0
0155:  GOTO   15B
0156:  MOVLW  7F
0157:  ADDWF  54,F
0158:  BTFSC  03.0
0159:  GOTO   211
015A:  GOTO   161
015B:  MOVLW  81
015C:  SUBWF  54,F
015D:  BTFSS  03.0
015E:  GOTO   211
015F:  BTFSC  03.2
0160:  GOTO   211
0161:  MOVF   54,W
0162:  MOVWF  77
0163:  CLRF   78
0164:  CLRF   79
0165:  CLRF   7A
0166:  CLRF   53
0167:  MOVF   49,W
0168:  MOVWF  52
0169:  BSF    52.7
016A:  MOVF   4A,W
016B:  MOVWF  51
016C:  MOVF   4B,W
016D:  MOVWF  50
016E:  MOVLW  19
016F:  MOVWF  54
0170:  MOVF   4F,W
0171:  SUBWF  50,F
0172:  BTFSC  03.0
0173:  GOTO   184
0174:  MOVLW  01
0175:  SUBWF  51,F
0176:  BTFSC  03.0
0177:  GOTO   184
0178:  SUBWF  52,F
0179:  BTFSC  03.0
017A:  GOTO   184
017B:  SUBWF  53,F
017C:  BTFSC  03.0
017D:  GOTO   184
017E:  INCF   53,F
017F:  INCF   52,F
0180:  INCF   51,F
0181:  MOVF   4F,W
0182:  ADDWF  50,F
0183:  GOTO   1B6
0184:  MOVF   4E,W
0185:  SUBWF  51,F
0186:  BTFSC  03.0
0187:  GOTO   19F
0188:  MOVLW  01
0189:  SUBWF  52,F
018A:  BTFSC  03.0
018B:  GOTO   19F
018C:  SUBWF  53,F
018D:  BTFSC  03.0
018E:  GOTO   19F
018F:  INCF   53,F
0190:  INCF   52,F
0191:  MOVF   4E,W
0192:  ADDWF  51,F
0193:  MOVF   4F,W
0194:  ADDWF  50,F
0195:  BTFSS  03.0
0196:  GOTO   1B6
0197:  INCF   51,F
0198:  BTFSS  03.2
0199:  GOTO   1B6
019A:  INCF   52,F
019B:  BTFSS  03.2
019C:  GOTO   1B6
019D:  INCF   53,F
019E:  GOTO   1B6
019F:  MOVF   4D,W
01A0:  IORLW  80
01A1:  SUBWF  52,F
01A2:  BTFSC  03.0
01A3:  GOTO   1B5
01A4:  MOVLW  01
01A5:  SUBWF  53,F
01A6:  BTFSC  03.0
01A7:  GOTO   1B5
01A8:  INCF   53,F
01A9:  MOVF   4D,W
01AA:  IORLW  80
01AB:  ADDWF  52,F
01AC:  MOVF   4E,W
01AD:  ADDWF  51,F
01AE:  BTFSS  03.0
01AF:  GOTO   193
01B0:  INCF   52,F
01B1:  BTFSS  03.2
01B2:  GOTO   193
01B3:  INCF   53,F
01B4:  GOTO   193
01B5:  BSF    7A.0
01B6:  DECFSZ 54,F
01B7:  GOTO   1B9
01B8:  GOTO   1C4
01B9:  BCF    03.0
01BA:  RLF    50,F
01BB:  RLF    51,F
01BC:  RLF    52,F
01BD:  RLF    53,F
01BE:  BCF    03.0
01BF:  RLF    7A,F
01C0:  RLF    79,F
01C1:  RLF    78,F
01C2:  RLF    55,F
01C3:  GOTO   170
01C4:  BTFSS  55.0
01C5:  GOTO   1CC
01C6:  BCF    03.0
01C7:  RRF    78,F
01C8:  RRF    79,F
01C9:  RRF    7A,F
01CA:  RRF    55,F
01CB:  GOTO   1CF
01CC:  DECF   77,F
01CD:  BTFSC  03.2
01CE:  GOTO   211
01CF:  BTFSC  55.7
01D0:  GOTO   1F8
01D1:  BCF    03.0
01D2:  RLF    50,F
01D3:  RLF    51,F
01D4:  RLF    52,F
01D5:  RLF    53,F
01D6:  MOVF   4F,W
01D7:  SUBWF  50,F
01D8:  BTFSC  03.0
01D9:  GOTO   1E4
01DA:  MOVLW  01
01DB:  SUBWF  51,F
01DC:  BTFSC  03.0
01DD:  GOTO   1E4
01DE:  SUBWF  52,F
01DF:  BTFSC  03.0
01E0:  GOTO   1E4
01E1:  SUBWF  53,F
01E2:  BTFSS  03.0
01E3:  GOTO   207
01E4:  MOVF   4E,W
01E5:  SUBWF  51,F
01E6:  BTFSC  03.0
01E7:  GOTO   1EF
01E8:  MOVLW  01
01E9:  SUBWF  52,F
01EA:  BTFSC  03.0
01EB:  GOTO   1EF
01EC:  SUBWF  53,F
01ED:  BTFSS  03.0
01EE:  GOTO   207
01EF:  MOVF   4D,W
01F0:  IORLW  80
01F1:  SUBWF  52,F
01F2:  BTFSC  03.0
01F3:  GOTO   1F8
01F4:  MOVLW  01
01F5:  SUBWF  53,F
01F6:  BTFSS  03.0
01F7:  GOTO   207
01F8:  INCF   7A,F
01F9:  BTFSS  03.2
01FA:  GOTO   207
01FB:  INCF   79,F
01FC:  BTFSS  03.2
01FD:  GOTO   207
01FE:  INCF   78,F
01FF:  BTFSS  03.2
0200:  GOTO   207
0201:  INCF   77,F
0202:  BTFSC  03.2
0203:  GOTO   211
0204:  RRF    78,F
0205:  RRF    79,F
0206:  RRF    7A,F
0207:  MOVF   49,W
0208:  MOVWF  54
0209:  MOVF   4D,W
020A:  XORWF  54,F
020B:  BTFSS  54.7
020C:  GOTO   20F
020D:  BSF    78.7
020E:  GOTO   215
020F:  BCF    78.7
0210:  GOTO   215
0211:  CLRF   77
0212:  CLRF   78
0213:  CLRF   79
0214:  CLRF   7A
0215:  RETURN
0216:  MOVF   59,W
0217:  BTFSC  03.2
0218:  GOTO   286
0219:  MOVWF  61
021A:  MOVF   5D,W
021B:  BTFSC  03.2
021C:  GOTO   286
021D:  ADDWF  61,F
021E:  BTFSC  03.0
021F:  GOTO   227
0220:  MOVLW  7F
0221:  SUBWF  61,F
0222:  BTFSS  03.0
0223:  GOTO   286
0224:  BTFSC  03.2
0225:  GOTO   286
0226:  GOTO   22B
0227:  MOVLW  81
0228:  ADDWF  61,F
0229:  BTFSC  03.0
022A:  GOTO   286
022B:  MOVF   61,W
022C:  MOVWF  77
022D:  CLRF   78
022E:  CLRF   79
022F:  CLRF   7A
0230:  MOVF   5A,W
0231:  MOVWF  65
0232:  BSF    65.7
0233:  MOVF   5B,W
0234:  MOVWF  64
0235:  MOVF   5C,W
0236:  MOVWF  63
0237:  MOVLW  18
0238:  MOVWF  61
0239:  CLRF   62
023A:  BTFSS  63.0
023B:  GOTO   254
023C:  MOVF   60,W
023D:  ADDWF  7A,F
023E:  BTFSS  03.0
023F:  GOTO   246
0240:  INCF   79,F
0241:  BTFSS  03.2
0242:  GOTO   246
0243:  INCF   78,F
0244:  BTFSC  03.2
0245:  BSF    62.7
0246:  MOVF   5F,W
0247:  ADDWF  79,F
0248:  BTFSS  03.0
0249:  GOTO   24D
024A:  INCF   78,F
024B:  BTFSC  03.2
024C:  BSF    62.7
024D:  MOVF   5E,W
024E:  MOVWF  5B
024F:  BSF    5B.7
0250:  MOVF   5B,W
0251:  ADDWF  78,F
0252:  BTFSC  03.0
0253:  BSF    62.7
0254:  RLF    62,F
0255:  RRF    78,F
0256:  RRF    79,F
0257:  RRF    7A,F
0258:  RRF    65,F
0259:  RRF    64,F
025A:  RRF    63,F
025B:  BCF    03.0
025C:  DECFSZ 61,F
025D:  GOTO   239
025E:  MOVLW  01
025F:  ADDWF  77,F
0260:  BTFSC  03.0
0261:  GOTO   286
0262:  BTFSC  78.7
0263:  GOTO   26B
0264:  RLF    65,F
0265:  RLF    7A,F
0266:  RLF    79,F
0267:  RLF    78,F
0268:  DECF   77,F
0269:  BTFSC  03.2
026A:  GOTO   286
026B:  BTFSS  65.7
026C:  GOTO   27C
026D:  INCF   7A,F
026E:  BTFSS  03.2
026F:  GOTO   27C
0270:  INCF   79,F
0271:  BTFSS  03.2
0272:  GOTO   27C
0273:  INCF   78,F
0274:  BTFSS  03.2
0275:  GOTO   27C
0276:  RRF    78,F
0277:  RRF    79,F
0278:  RRF    7A,F
0279:  INCF   77,F
027A:  BTFSC  03.2
027B:  GOTO   286
027C:  MOVF   5A,W
027D:  MOVWF  62
027E:  MOVF   5E,W
027F:  XORWF  62,F
0280:  BTFSS  62.7
0281:  GOTO   284
0282:  BSF    78.7
0283:  GOTO   28A
0284:  BCF    78.7
0285:  GOTO   28A
0286:  CLRF   77
0287:  CLRF   78
0288:  CLRF   79
0289:  CLRF   7A
028A:  RETURN
028B:  MOVLW  80
028C:  BTFSC  03.1
028D:  XORWF  51,F
028E:  CLRF   56
028F:  CLRF   57
0290:  MOVF   4D,W
0291:  MOVWF  55
0292:  MOVF   51,W
0293:  XORWF  55,F
0294:  MOVF   4C,W
0295:  BTFSC  03.2
0296:  GOTO   37B
0297:  MOVWF  54
0298:  MOVWF  77
0299:  MOVF   50,W
029A:  BTFSC  03.2
029B:  GOTO   384
029C:  SUBWF  54,F
029D:  BTFSC  03.2
029E:  GOTO   320
029F:  BTFSS  03.0
02A0:  GOTO   2DE
02A1:  MOVF   51,W
02A2:  MOVWF  5A
02A3:  BSF    5A.7
02A4:  MOVF   52,W
02A5:  MOVWF  59
02A6:  MOVF   53,W
02A7:  MOVWF  58
02A8:  CLRF   57
02A9:  BCF    03.0
02AA:  RRF    5A,F
02AB:  RRF    59,F
02AC:  RRF    58,F
02AD:  RRF    57,F
02AE:  DECFSZ 54,F
02AF:  GOTO   2A8
02B0:  BTFSS  55.7
02B1:  GOTO   2B5
02B2:  BSF    56.0
02B3:  GOTO   398
02B4:  BCF    56.0
02B5:  BCF    54.0
02B6:  BSF    56.4
02B7:  MOVLW  4F
02B8:  MOVWF  04
02B9:  BCF    03.7
02BA:  GOTO   3AD
02BB:  BCF    56.4
02BC:  BTFSC  55.7
02BD:  GOTO   2C8
02BE:  BTFSS  54.0
02BF:  GOTO   2D3
02C0:  RRF    5A,F
02C1:  RRF    59,F
02C2:  RRF    58,F
02C3:  RRF    57,F
02C4:  INCF   77,F
02C5:  BTFSC  03.2
02C6:  GOTO   393
02C7:  GOTO   2D3
02C8:  BTFSC  5A.7
02C9:  GOTO   2D6
02CA:  BCF    03.0
02CB:  RLF    57,F
02CC:  RLF    58,F
02CD:  RLF    59,F
02CE:  RLF    5A,F
02CF:  DECF   77,F
02D0:  BTFSC  03.2
02D1:  GOTO   393
02D2:  GOTO   2C8
02D3:  BSF    56.6
02D4:  GOTO   340
02D5:  BCF    56.6
02D6:  MOVF   4D,W
02D7:  MOVWF  55
02D8:  BTFSS  55.7
02D9:  GOTO   2DC
02DA:  BSF    5A.7
02DB:  GOTO   38C
02DC:  BCF    5A.7
02DD:  GOTO   38C
02DE:  MOVF   50,W
02DF:  MOVWF  54
02E0:  MOVWF  77
02E1:  MOVF   4C,W
02E2:  SUBWF  54,F
02E3:  MOVF   4D,W
02E4:  MOVWF  5A
02E5:  BSF    5A.7
02E6:  MOVF   4E,W
02E7:  MOVWF  59
02E8:  MOVF   4F,W
02E9:  MOVWF  58
02EA:  CLRF   57
02EB:  BCF    03.0
02EC:  RRF    5A,F
02ED:  RRF    59,F
02EE:  RRF    58,F
02EF:  RRF    57,F
02F0:  DECFSZ 54,F
02F1:  GOTO   2EA
02F2:  BTFSS  55.7
02F3:  GOTO   2F7
02F4:  BSF    56.1
02F5:  GOTO   398
02F6:  BCF    56.1
02F7:  BCF    54.0
02F8:  BSF    56.5
02F9:  MOVLW  53
02FA:  MOVWF  04
02FB:  BCF    03.7
02FC:  GOTO   3AD
02FD:  BCF    56.5
02FE:  BTFSC  55.7
02FF:  GOTO   30A
0300:  BTFSS  54.0
0301:  GOTO   315
0302:  RRF    5A,F
0303:  RRF    59,F
0304:  RRF    58,F
0305:  RRF    57,F
0306:  INCF   77,F
0307:  BTFSC  03.2
0308:  GOTO   393
0309:  GOTO   315
030A:  BTFSC  5A.7
030B:  GOTO   318
030C:  BCF    03.0
030D:  RLF    57,F
030E:  RLF    58,F
030F:  RLF    59,F
0310:  RLF    5A,F
0311:  DECF   77,F
0312:  BTFSC  03.2
0313:  GOTO   393
0314:  GOTO   30A
0315:  BSF    56.7
0316:  GOTO   340
0317:  BCF    56.7
0318:  MOVF   51,W
0319:  MOVWF  55
031A:  BTFSS  55.7
031B:  GOTO   31E
031C:  BSF    5A.7
031D:  GOTO   38C
031E:  BCF    5A.7
031F:  GOTO   38C
0320:  MOVF   51,W
0321:  MOVWF  5A
0322:  BSF    5A.7
0323:  MOVF   52,W
0324:  MOVWF  59
0325:  MOVF   53,W
0326:  MOVWF  58
0327:  BTFSS  55.7
0328:  GOTO   32D
0329:  BCF    5A.7
032A:  BSF    56.2
032B:  GOTO   398
032C:  BCF    56.2
032D:  CLRF   57
032E:  BCF    54.0
032F:  MOVLW  4F
0330:  MOVWF  04
0331:  BCF    03.7
0332:  GOTO   3AD
0333:  BTFSC  55.7
0334:  GOTO   356
0335:  MOVF   4D,W
0336:  MOVWF  55
0337:  BTFSS  54.0
0338:  GOTO   340
0339:  RRF    5A,F
033A:  RRF    59,F
033B:  RRF    58,F
033C:  RRF    57,F
033D:  INCF   77,F
033E:  BTFSC  03.2
033F:  GOTO   393
0340:  BTFSS  57.7
0341:  GOTO   351
0342:  INCF   58,F
0343:  BTFSS  03.2
0344:  GOTO   351
0345:  INCF   59,F
0346:  BTFSS  03.2
0347:  GOTO   351
0348:  INCF   5A,F
0349:  BTFSS  03.2
034A:  GOTO   351
034B:  RRF    5A,F
034C:  RRF    59,F
034D:  RRF    58,F
034E:  INCF   77,F
034F:  BTFSC  03.2
0350:  GOTO   393
0351:  BTFSC  56.6
0352:  GOTO   2D5
0353:  BTFSC  56.7
0354:  GOTO   317
0355:  GOTO   375
0356:  MOVLW  80
0357:  XORWF  5A,F
0358:  BTFSS  5A.7
0359:  GOTO   35E
035A:  GOTO   398
035B:  MOVF   51,W
035C:  MOVWF  55
035D:  GOTO   36B
035E:  MOVF   4D,W
035F:  MOVWF  55
0360:  MOVF   5A,F
0361:  BTFSS  03.2
0362:  GOTO   36B
0363:  MOVF   59,F
0364:  BTFSS  03.2
0365:  GOTO   36B
0366:  MOVF   58,F
0367:  BTFSS  03.2
0368:  GOTO   36B
0369:  CLRF   77
036A:  GOTO   38C
036B:  BTFSC  5A.7
036C:  GOTO   375
036D:  BCF    03.0
036E:  RLF    57,F
036F:  RLF    58,F
0370:  RLF    59,F
0371:  RLF    5A,F
0372:  DECFSZ 77,F
0373:  GOTO   36B
0374:  GOTO   393
0375:  BTFSS  55.7
0376:  GOTO   379
0377:  BSF    5A.7
0378:  GOTO   38C
0379:  BCF    5A.7
037A:  GOTO   38C
037B:  MOVF   50,W
037C:  MOVWF  77
037D:  MOVF   51,W
037E:  MOVWF  5A
037F:  MOVF   52,W
0380:  MOVWF  59
0381:  MOVF   53,W
0382:  MOVWF  58
0383:  GOTO   38C
0384:  MOVF   4C,W
0385:  MOVWF  77
0386:  MOVF   4D,W
0387:  MOVWF  5A
0388:  MOVF   4E,W
0389:  MOVWF  59
038A:  MOVF   4F,W
038B:  MOVWF  58
038C:  MOVF   5A,W
038D:  MOVWF  78
038E:  MOVF   59,W
038F:  MOVWF  79
0390:  MOVF   58,W
0391:  MOVWF  7A
0392:  GOTO   3CB
0393:  CLRF   77
0394:  CLRF   78
0395:  CLRF   79
0396:  CLRF   7A
0397:  GOTO   3CB
0398:  CLRF   57
0399:  COMF   58,F
039A:  COMF   59,F
039B:  COMF   5A,F
039C:  COMF   57,F
039D:  INCF   57,F
039E:  BTFSS  03.2
039F:  GOTO   3A6
03A0:  INCF   58,F
03A1:  BTFSS  03.2
03A2:  GOTO   3A6
03A3:  INCF   59,F
03A4:  BTFSC  03.2
03A5:  INCF   5A,F
03A6:  BTFSC  56.0
03A7:  GOTO   2B4
03A8:  BTFSC  56.1
03A9:  GOTO   2F6
03AA:  BTFSC  56.2
03AB:  GOTO   32C
03AC:  GOTO   35B
03AD:  MOVF   00,W
03AE:  ADDWF  58,F
03AF:  BTFSS  03.0
03B0:  GOTO   3B7
03B1:  INCF   59,F
03B2:  BTFSS  03.2
03B3:  GOTO   3B7
03B4:  INCF   5A,F
03B5:  BTFSC  03.2
03B6:  BSF    54.0
03B7:  DECF   04,F
03B8:  MOVF   00,W
03B9:  ADDWF  59,F
03BA:  BTFSS  03.0
03BB:  GOTO   3BF
03BC:  INCF   5A,F
03BD:  BTFSC  03.2
03BE:  BSF    54.0
03BF:  DECF   04,F
03C0:  MOVF   00,W
03C1:  BTFSS  00.7
03C2:  XORLW  80
03C3:  ADDWF  5A,F
03C4:  BTFSC  03.0
03C5:  BSF    54.0
03C6:  BTFSC  56.4
03C7:  GOTO   2BB
03C8:  BTFSC  56.5
03C9:  GOTO   2FD
03CA:  GOTO   333
03CB:  RETURN
*
06A9:  MOVF   49,W
06AA:  MOVWF  50
06AB:  MOVF   4D,W
06AC:  XORWF  50,F
06AD:  BTFSS  50.7
06AE:  GOTO   6B4
06AF:  BCF    03.2
06B0:  BCF    03.0
06B1:  BTFSC  49.7
06B2:  BSF    03.0
06B3:  GOTO   6E7
06B4:  MOVF   49,W
06B5:  MOVWF  50
06B6:  MOVF   4C,W
06B7:  MOVWF  51
06B8:  MOVF   48,W
06B9:  SUBWF  51,F
06BA:  BTFSC  03.2
06BB:  GOTO   6C2
06BC:  BTFSS  50.7
06BD:  GOTO   6E7
06BE:  MOVF   03,W
06BF:  XORLW  01
06C0:  MOVWF  03
06C1:  GOTO   6E7
06C2:  MOVF   4D,W
06C3:  MOVWF  51
06C4:  MOVF   49,W
06C5:  SUBWF  51,F
06C6:  BTFSC  03.2
06C7:  GOTO   6CE
06C8:  BTFSS  50.7
06C9:  GOTO   6E7
06CA:  MOVF   03,W
06CB:  XORLW  01
06CC:  MOVWF  03
06CD:  GOTO   6E7
06CE:  MOVF   4E,W
06CF:  MOVWF  51
06D0:  MOVF   4A,W
06D1:  SUBWF  51,F
06D2:  BTFSC  03.2
06D3:  GOTO   6DA
06D4:  BTFSS  50.7
06D5:  GOTO   6E7
06D6:  MOVF   03,W
06D7:  XORLW  01
06D8:  MOVWF  03
06D9:  GOTO   6E7
06DA:  MOVF   4F,W
06DB:  MOVWF  51
06DC:  MOVF   4B,W
06DD:  SUBWF  51,F
06DE:  BTFSC  03.2
06DF:  GOTO   6E6
06E0:  BTFSS  50.7
06E1:  GOTO   6E7
06E2:  MOVF   03,W
06E3:  XORLW  01
06E4:  MOVWF  03
06E5:  GOTO   6E7
06E6:  BCF    03.0
06E7:  RETURN
06E8:  MOVLW  8E
06E9:  MOVWF  77
06EA:  MOVF   48,W
06EB:  SUBWF  77,F
06EC:  MOVF   49,W
06ED:  MOVWF  79
06EE:  MOVF   4A,W
06EF:  MOVWF  78
06F0:  BSF    79.7
06F1:  MOVF   77,F
06F2:  BTFSC  03.2
06F3:  GOTO   6FF
06F4:  BCF    03.0
06F5:  MOVF   79,F
06F6:  BTFSS  03.2
06F7:  GOTO   6FB
06F8:  MOVF   78,F
06F9:  BTFSC  03.2
06FA:  GOTO   6FF
06FB:  RRF    79,F
06FC:  RRF    78,F
06FD:  DECFSZ 77,F
06FE:  GOTO   6F4
06FF:  BTFSS  49.7
0700:  GOTO   706
0701:  COMF   78,F
0702:  COMF   79,F
0703:  INCF   78,F
0704:  BTFSC  03.2
0705:  INCF   79,F
0706:  RETURN
0707:  BTFSC  03.1
0708:  GOTO   70C
0709:  MOVLW  61
070A:  MOVWF  04
070B:  BCF    03.7
070C:  CLRF   77
070D:  CLRF   78
070E:  CLRF   79
070F:  CLRF   7A
0710:  CLRF   61
0711:  CLRF   62
0712:  CLRF   63
0713:  CLRF   64
0714:  MOVF   60,W
0715:  IORWF  5F,W
0716:  IORWF  5E,W
0717:  IORWF  5D,W
0718:  BTFSC  03.2
0719:  GOTO   74A
071A:  MOVLW  20
071B:  MOVWF  65
071C:  BCF    03.0
071D:  RLF    59,F
071E:  RLF    5A,F
071F:  RLF    5B,F
0720:  RLF    5C,F
0721:  RLF    61,F
0722:  RLF    62,F
0723:  RLF    63,F
0724:  RLF    64,F
0725:  MOVF   60,W
0726:  SUBWF  64,W
0727:  BTFSS  03.2
0728:  GOTO   733
0729:  MOVF   5F,W
072A:  SUBWF  63,W
072B:  BTFSS  03.2
072C:  GOTO   733
072D:  MOVF   5E,W
072E:  SUBWF  62,W
072F:  BTFSS  03.2
0730:  GOTO   733
0731:  MOVF   5D,W
0732:  SUBWF  61,W
0733:  BTFSS  03.0
0734:  GOTO   744
0735:  MOVF   5D,W
0736:  SUBWF  61,F
0737:  MOVF   5E,W
0738:  BTFSS  03.0
0739:  INCFSZ 5E,W
073A:  SUBWF  62,F
073B:  MOVF   5F,W
073C:  BTFSS  03.0
073D:  INCFSZ 5F,W
073E:  SUBWF  63,F
073F:  MOVF   60,W
0740:  BTFSS  03.0
0741:  INCFSZ 60,W
0742:  SUBWF  64,F
0743:  BSF    03.0
0744:  RLF    77,F
0745:  RLF    78,F
0746:  RLF    79,F
0747:  RLF    7A,F
0748:  DECFSZ 65,F
0749:  GOTO   71C
074A:  MOVF   61,W
074B:  MOVWF  00
074C:  INCF   04,F
074D:  MOVF   62,W
074E:  MOVWF  00
074F:  INCF   04,F
0750:  MOVF   63,W
0751:  MOVWF  00
0752:  INCF   04,F
0753:  MOVF   64,W
0754:  MOVWF  00
0755:  RETURN
*
076F:  MOVLW  20
0770:  MOVWF  57
0771:  CLRF   53
0772:  CLRF   54
0773:  CLRF   55
0774:  CLRF   56
0775:  MOVF   4E,W
0776:  MOVWF  7A
0777:  MOVF   4D,W
0778:  MOVWF  79
0779:  MOVF   4C,W
077A:  MOVWF  78
077B:  MOVF   4B,W
077C:  MOVWF  77
077D:  BCF    03.0
077E:  BTFSS  77.0
077F:  GOTO   78E
0780:  MOVF   4F,W
0781:  ADDWF  53,F
0782:  MOVF   50,W
0783:  BTFSC  03.0
0784:  INCFSZ 50,W
0785:  ADDWF  54,F
0786:  MOVF   51,W
0787:  BTFSC  03.0
0788:  INCFSZ 51,W
0789:  ADDWF  55,F
078A:  MOVF   52,W
078B:  BTFSC  03.0
078C:  INCFSZ 52,W
078D:  ADDWF  56,F
078E:  RRF    56,F
078F:  RRF    55,F
0790:  RRF    54,F
0791:  RRF    53,F
0792:  RRF    7A,F
0793:  RRF    79,F
0794:  RRF    78,F
0795:  RRF    77,F
0796:  DECFSZ 57,F
0797:  GOTO   77D
*
0800:  MOVF   0B,W
0801:  MOVWF  4D
0802:  BCF    0B.7
0803:  BSF    03.5
0804:  BSF    03.6
0805:  BSF    0C.7
0806:  BSF    0C.0
0807:  NOP
0808:  NOP
0809:  BCF    03.5
080A:  BCF    03.6
080B:  BTFSC  4D.7
080C:  BSF    0B.7
080D:  BTFSC  03.0
080E:  GOTO   039
080F:  BSF    03.6
0810:  MOVF   0C,W
0811:  ANDLW  7F
0812:  BCF    03.6
0813:  MOVWF  4D
0814:  BSF    03.6
0815:  MOVF   0D,W
0816:  BCF    03.6
0817:  MOVWF  4E
0818:  BSF    03.6
0819:  MOVF   0F,W
081A:  BCF    03.6
081B:  MOVWF  4F
081C:  MOVF   4D,W
081D:  MOVWF  59
081E:  BCF    0A.3
081F:  CALL   108
0820:  BSF    0A.3
0821:  MOVF   4E,W
0822:  BSF    03.6
0823:  MOVWF  0D
0824:  BCF    03.6
0825:  MOVF   4F,W
0826:  BSF    03.6
0827:  MOVWF  0F
0828:  BCF    03.6
0829:  MOVF   0B,W
082A:  MOVWF  50
082B:  BCF    0B.7
082C:  BSF    03.5
082D:  BSF    03.6
082E:  BSF    0C.7
082F:  BSF    0C.0
0830:  NOP
0831:  NOP
0832:  BCF    03.5
0833:  BCF    03.6
0834:  BTFSC  50.7
0835:  BSF    0B.7
0836:  DECFSZ 4C,F
0837:  GOTO   039
0838:  GOTO   05A
0839:  BSF    03.6
083A:  RLF    0C,W
083B:  RLF    0E,W
083C:  ANDLW  7F
083D:  BCF    03.6
083E:  MOVWF  4D
083F:  BSF    03.6
0840:  MOVF   0D,W
0841:  BCF    03.6
0842:  MOVWF  4E
0843:  BSF    03.6
0844:  MOVF   0F,W
0845:  BCF    03.6
0846:  MOVWF  4F
0847:  MOVF   4D,W
0848:  MOVWF  59
0849:  BCF    0A.3
084A:  CALL   108
084B:  BSF    0A.3
084C:  MOVF   4E,W
084D:  BSF    03.6
084E:  MOVWF  0D
084F:  BCF    03.6
0850:  MOVF   4F,W
0851:  BSF    03.6
0852:  MOVWF  0F
0853:  INCF   0D,F
0854:  BTFSC  03.2
0855:  INCF   0F,F
0856:  BCF    03.0
0857:  BCF    03.6
0858:  DECFSZ 4C,F
0859:  GOTO   000
085A:  RETURN
085B:  MOVF   04,W
085C:  MOVWF  51
085D:  MOVF   50,W
085E:  MOVWF  53
085F:  BTFSC  03.2
0860:  GOTO   07C
0861:  MOVF   4F,W
0862:  MOVWF  5C
0863:  MOVF   4E,W
0864:  MOVWF  5B
0865:  MOVF   4D,W
0866:  MOVWF  5A
0867:  MOVF   4C,W
0868:  MOVWF  59
0869:  CLRF   60
086A:  CLRF   5F
086B:  MOVLW  20
086C:  MOVWF  5E
086D:  MOVLW  82
086E:  MOVWF  5D
086F:  BCF    0A.3
0870:  CALL   216
0871:  BSF    0A.3
0872:  MOVF   7A,W
0873:  MOVWF  4F
0874:  MOVF   79,W
0875:  MOVWF  4E
0876:  MOVF   78,W
0877:  MOVWF  4D
0878:  MOVF   77,W
0879:  MOVWF  4C
087A:  DECFSZ 53,F
087B:  GOTO   061
087C:  MOVF   4F,W
087D:  MOVWF  5C
087E:  MOVF   4E,W
087F:  MOVWF  5B
0880:  MOVF   4D,W
0881:  MOVWF  5A
0882:  MOVF   4C,W
0883:  MOVWF  59
0884:  MOVF   59,W
0885:  SUBLW  B6
0886:  MOVWF  59
0887:  CLRF   7A
0888:  MOVF   5A,W
0889:  MOVWF  5D
088A:  BSF    5A.7
088B:  BCF    03.0
088C:  RRF    5A,F
088D:  RRF    5B,F
088E:  RRF    5C,F
088F:  RRF    7A,F
0890:  RRF    79,F
0891:  RRF    78,F
0892:  RRF    77,F
0893:  DECFSZ 59,F
0894:  GOTO   08B
0895:  BTFSS  5D.7
0896:  GOTO   0A2
0897:  COMF   77,F
0898:  COMF   78,F
0899:  COMF   79,F
089A:  COMF   7A,F
089B:  INCF   77,F
089C:  BTFSC  03.2
089D:  INCF   78,F
089E:  BTFSC  03.2
089F:  INCF   79,F
08A0:  BTFSC  03.2
08A1:  INCF   7A,F
08A2:  MOVF   7A,W
08A3:  MOVWF  4F
08A4:  MOVF   79,W
08A5:  MOVWF  4E
08A6:  MOVF   78,W
08A7:  MOVWF  4D
08A8:  MOVF   77,W
08A9:  MOVWF  4C
08AA:  BTFSS  4F.7
08AB:  GOTO   0B9
08AC:  DECF   51,F
08AD:  BSF    51.5
08AE:  COMF   4C,F
08AF:  COMF   4D,F
08B0:  COMF   4E,F
08B1:  COMF   4F,F
08B2:  INCF   4C,F
08B3:  BTFSC  03.2
08B4:  INCF   4D,F
08B5:  BTFSC  03.2
08B6:  INCF   4E,F
08B7:  BTFSC  03.2
08B8:  INCF   4F,F
08B9:  MOVLW  3B
08BA:  MOVWF  58
08BB:  MOVLW  9A
08BC:  MOVWF  57
08BD:  MOVLW  CA
08BE:  MOVWF  56
08BF:  CLRF   55
08C0:  MOVLW  0A
08C1:  MOVWF  53
08C2:  MOVF   50,W
08C3:  BTFSC  03.2
08C4:  INCF   51,F
08C5:  BSF    03.1
08C6:  MOVLW  4C
08C7:  MOVWF  04
08C8:  BCF    03.7
08C9:  MOVF   4F,W
08CA:  MOVWF  5C
08CB:  MOVF   4E,W
08CC:  MOVWF  5B
08CD:  MOVF   4D,W
08CE:  MOVWF  5A
08CF:  MOVF   4C,W
08D0:  MOVWF  59
08D1:  MOVF   58,W
08D2:  MOVWF  60
08D3:  MOVF   57,W
08D4:  MOVWF  5F
08D5:  MOVF   56,W
08D6:  MOVWF  5E
08D7:  MOVF   55,W
08D8:  MOVWF  5D
08D9:  BCF    0A.3
08DA:  CALL   707
08DB:  BSF    0A.3
08DC:  MOVF   78,W
08DD:  MOVF   77,F
08DE:  BTFSS  03.2
08DF:  GOTO   0F3
08E0:  INCF   50,W
08E1:  SUBWF  53,W
08E2:  BTFSC  03.2
08E3:  GOTO   0F3
08E4:  MOVF   51,W
08E5:  BTFSC  03.2
08E6:  GOTO   0F5
08E7:  ANDLW  0F
08E8:  SUBWF  53,W
08E9:  BTFSC  03.2
08EA:  GOTO   0ED
08EB:  BTFSC  03.0
08EC:  GOTO   12D
08ED:  BTFSC  51.7
08EE:  GOTO   12D
08EF:  BTFSC  51.6
08F0:  GOTO   0F5
08F1:  MOVLW  20
08F2:  GOTO   127
08F3:  MOVLW  20
08F4:  ANDWF  51,F
08F5:  BTFSS  51.5
08F6:  GOTO   105
08F7:  BCF    51.5
08F8:  MOVF   50,W
08F9:  BTFSS  03.2
08FA:  DECF   51,F
08FB:  MOVF   77,W
08FC:  MOVWF  51
08FD:  MOVLW  2D
08FE:  MOVWF  59
08FF:  BCF    0A.3
0900:  CALL   108
0901:  BSF    0A.3
0902:  MOVF   51,W
0903:  MOVWF  77
0904:  CLRF   51
0905:  MOVF   50,W
0906:  SUBWF  53,W
0907:  BTFSS  03.2
0908:  GOTO   115
0909:  MOVF   77,W
090A:  MOVWF  51
090B:  MOVLW  2E
090C:  MOVWF  59
090D:  BCF    0A.3
090E:  CALL   108
090F:  BSF    0A.3
0910:  MOVF   51,W
0911:  MOVWF  77
0912:  MOVLW  20
0913:  ANDWF  51,F
0914:  MOVLW  00
0915:  MOVLW  30
0916:  BTFSS  51.5
0917:  GOTO   127
0918:  BCF    51.5
0919:  MOVF   50,W
091A:  BTFSS  03.2
091B:  DECF   51,F
091C:  MOVF   77,W
091D:  MOVWF  51
091E:  MOVLW  2D
091F:  MOVWF  59
0920:  BCF    0A.3
0921:  CALL   108
0922:  BSF    0A.3
0923:  MOVF   51,W
0924:  MOVWF  77
0925:  CLRF   51
0926:  MOVLW  30
0927:  ADDWF  77,F
0928:  MOVF   77,W
0929:  MOVWF  59
092A:  BCF    0A.3
092B:  CALL   108
092C:  BSF    0A.3
092D:  BCF    03.1
092E:  MOVF   58,W
092F:  MOVWF  5C
0930:  MOVF   57,W
0931:  MOVWF  5B
0932:  MOVF   56,W
0933:  MOVWF  5A
0934:  MOVF   55,W
0935:  MOVWF  59
0936:  CLRF   60
0937:  CLRF   5F
0938:  CLRF   5E
0939:  MOVLW  0A
093A:  MOVWF  5D
093B:  BCF    0A.3
093C:  CALL   707
093D:  BSF    0A.3
093E:  MOVF   7A,W
093F:  MOVWF  58
0940:  MOVF   79,W
0941:  MOVWF  57
0942:  MOVF   78,W
0943:  MOVWF  56
0944:  MOVF   77,W
0945:  MOVWF  55
0946:  DECFSZ 53,F
0947:  GOTO   0C5
0948:  RETURN
0949:  MOVF   0B,W
094A:  MOVWF  48
094B:  BCF    0B.7
094C:  BSF    03.5
094D:  BSF    03.6
094E:  BSF    0C.7
094F:  BSF    0C.0
0950:  NOP
0951:  NOP
0952:  BCF    03.5
0953:  BCF    03.6
0954:  BTFSC  48.7
0955:  BSF    0B.7
0956:  BSF    03.6
0957:  MOVF   0C,W
0958:  ANDLW  7F
0959:  BTFSC  03.2
095A:  GOTO   1A1
095B:  BCF    03.6
095C:  MOVWF  48
095D:  BSF    03.6
095E:  MOVF   0D,W
095F:  BCF    03.6
0960:  MOVWF  49
0961:  BSF    03.6
0962:  MOVF   0F,W
0963:  BCF    03.6
0964:  MOVWF  4A
0965:  MOVF   48,W
0966:  MOVWF  59
0967:  BCF    0A.3
0968:  CALL   108
0969:  BSF    0A.3
096A:  MOVF   49,W
096B:  BSF    03.6
096C:  MOVWF  0D
096D:  BCF    03.6
096E:  MOVF   4A,W
096F:  BSF    03.6
0970:  MOVWF  0F
0971:  BCF    03.6
0972:  MOVF   0B,W
0973:  MOVWF  4B
0974:  BCF    0B.7
0975:  BSF    03.5
0976:  BSF    03.6
0977:  BSF    0C.7
0978:  BSF    0C.0
0979:  NOP
097A:  NOP
097B:  BCF    03.5
097C:  BCF    03.6
097D:  BTFSC  4B.7
097E:  BSF    0B.7
097F:  BSF    03.6
0980:  RLF    0C,W
0981:  RLF    0E,W
0982:  ANDLW  7F
0983:  BTFSC  03.2
0984:  GOTO   1A1
0985:  BCF    03.6
0986:  MOVWF  48
0987:  BSF    03.6
0988:  MOVF   0D,W
0989:  BCF    03.6
098A:  MOVWF  49
098B:  BSF    03.6
098C:  MOVF   0F,W
098D:  BCF    03.6
098E:  MOVWF  4A
098F:  MOVF   48,W
0990:  MOVWF  59
0991:  BCF    0A.3
0992:  CALL   108
0993:  BSF    0A.3
0994:  MOVF   49,W
0995:  BSF    03.6
0996:  MOVWF  0D
0997:  BCF    03.6
0998:  MOVF   4A,W
0999:  BSF    03.6
099A:  MOVWF  0F
099B:  INCF   0D,F
099C:  BTFSC  03.2
099D:  INCF   0F,F
099E:  BCF    03.6
099F:  GOTO   149
09A0:  BSF    03.6
09A1:  BCF    03.6
09A2:  RETURN
....................  
.................... #list 
....................  
.................... #fuses HS,BROWNOUT,NOWDT,NOLVP 
.................... #use delay(clock=20M) 
*
0059:  MOVLW  5A
005A:  MOVWF  04
005B:  BCF    03.7
005C:  MOVF   00,W
005D:  BTFSC  03.2
005E:  GOTO   06C
005F:  MOVLW  06
0060:  MOVWF  78
0061:  CLRF   77
0062:  DECFSZ 77,F
0063:  GOTO   062
0064:  DECFSZ 78,F
0065:  GOTO   061
0066:  MOVLW  7B
0067:  MOVWF  77
0068:  DECFSZ 77,F
0069:  GOTO   068
006A:  DECFSZ 00,F
006B:  GOTO   05F
006C:  RETURN
.................... #include<LCD420.c> 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... ////                             LCD420.C                               //// 
.................... ////            Driver for common 4x20 LCD modules                      //// 
.................... ////                                                                    //// 
.................... ////  lcd_init()   Must be called before any other function.            //// 
.................... ////                                                                    //// 
.................... ////  lcd_putc(c)  Will display c on the next position of the LCD.      //// 
.................... ////                     The following have special meaning:            //// 
.................... ////                      \f  Clear display                             //// 
.................... ////                      \n  Go to start of second line                //// 
.................... ////                      \b  Move back one position                    //// 
.................... ////                                                                    //// 
.................... ////  lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1)     //// 
.................... ////                                                                    //// 
.................... ////  lcd_getc(x,y)   Returns character at position x,y on LCD          //// 
.................... ////                                                                    //// 
.................... //////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,1997 Custom Computer Services            //// 
.................... //// This source code may only be used by licensed users of the CCS C   //// 
.................... //// compiler.  This source code may only be distributed to other       //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction  //// 
.................... //// or distribution is permitted without written permission.           //// 
.................... //// Derivative programs created using this software in object code     //// 
.................... //// form are not restricted in any way.                                //// 
.................... //////////////////////////////////////////////////////////////////////////// 
....................  
.................... // As defined in the following structure the pin connection is as follows: 
.................... //     B0  enable 
.................... //     B1  rs 
.................... //     B2  rw 
.................... //     B4  D4 
.................... //     B5  D5 
.................... //     B6  D6 
.................... //     B7  D7 
.................... // 
.................... //   LCD pins D0-D3 are not used and PIC B3 is not used. 
....................  
.................... struct lcd_pin_map {                 // This structure is overlayed 
....................            BOOLEAN enable;           // on to an I/O port to gain 
....................            BOOLEAN rs;               // access to the LCD pins. 
....................            BOOLEAN rw;               // The bits are allocated from 
....................            BOOLEAN unused;           // low order up.  ENABLE will 
....................            int     data : 4;         // be pin B0. 
....................         } lcd; 
....................  
.................... #locate lcd = getenv("SFR:PORTB")                        // This puts the entire structure 
....................                                      // on to port B  
....................  
.................... #define lcd_type 2           // 0=5x7, 1=5x10, 2=2 lines 
....................  
....................  
.................... BYTE const LCD_INIT_STRING[4] = {0x20 | (lcd_type << 2), 0xc, 1, 6}; 
....................                              // These bytes need to be sent to the LCD 
....................                              // to start it up. 
....................  
....................  
....................                              // The following are used for setting 
....................                              // the I/O port direction register. 
....................  
.................... struct lcd_pin_map const LCD_WRITE = {0,0,0,0,0}; // For write mode all pins are out 
.................... struct lcd_pin_map const LCD_READ = {0,0,0,0,15}; // For read mode data pins are in 
....................  
....................  
.................... BYTE lcdline; 
....................  
.................... BYTE lcd_read_byte() { 
....................       BYTE low,high; 
....................  
....................       set_tris_b(LCD_READ); 
*
007F:  MOVLW  F0
0080:  BSF    03.5
0081:  MOVWF  06
....................       lcd.rw = 1; 
0082:  BCF    03.5
0083:  BSF    06.2
....................       delay_cycles(1); 
0084:  NOP
....................       lcd.enable = 1; 
0085:  BSF    06.0
....................       delay_cycles(1); 
0086:  NOP
....................       high = lcd.data; 
0087:  MOVF   06,W
0088:  SWAPF  06,W
0089:  ANDLW  0F
008A:  MOVWF  60
....................       lcd.enable = 0; 
008B:  BCF    06.0
....................       delay_cycles(1); 
008C:  NOP
....................       lcd.enable = 1; 
008D:  BSF    06.0
....................       delay_us(1); 
008E:  GOTO   08F
008F:  GOTO   090
0090:  NOP
....................       low = lcd.data; 
0091:  MOVF   06,W
0092:  SWAPF  06,W
0093:  ANDLW  0F
0094:  MOVWF  5F
....................       lcd.enable = 0; 
0095:  BCF    06.0
....................       set_tris_b(LCD_WRITE); 
0096:  MOVLW  00
0097:  BSF    03.5
0098:  MOVWF  06
....................       return( (high<<4) | low); 
0099:  BCF    03.5
009A:  SWAPF  60,W
009B:  MOVWF  77
009C:  MOVLW  F0
009D:  ANDWF  77,F
009E:  MOVF   77,W
009F:  IORWF  5F,W
00A0:  MOVWF  78
.................... } 
....................  
....................  
.................... void lcd_send_nibble( BYTE n ) { 
....................       lcd.data = n; 
*
006D:  SWAPF  60,W
006E:  ANDLW  F0
006F:  MOVWF  77
0070:  MOVLW  0F
0071:  ANDWF  06,W
0072:  IORWF  77,W
0073:  MOVWF  06
....................       delay_cycles(1); 
0074:  NOP
....................       lcd.enable = 1; 
0075:  BSF    06.0
....................       delay_us(2); 
0076:  MOVLW  02
0077:  MOVWF  77
0078:  DECFSZ 77,F
0079:  GOTO   078
007A:  GOTO   07B
007B:  NOP
....................       lcd.enable = 0; 
007C:  BCF    06.0
007D:  RETURN
.................... } 
....................  
....................  
.................... void lcd_send_byte( BYTE address, BYTE n ) { 
....................  
....................       lcd.rs = 0; 
007E:  BCF    06.1
....................       while ( bit_test(lcd_read_byte(),7) ) ; 
*
00A1:  MOVF   78,W
00A2:  MOVWF  5F
00A3:  BTFSC  5F.7
00A4:  GOTO   07F
....................       lcd.rs = address; 
00A5:  BTFSS  5D.0
00A6:  BCF    06.1
00A7:  BTFSC  5D.0
00A8:  BSF    06.1
....................       delay_cycles(1); 
00A9:  NOP
....................       lcd.rw = 0; 
00AA:  BCF    06.2
....................       delay_cycles(1); 
00AB:  NOP
....................       lcd.enable = 0; 
00AC:  BCF    06.0
....................       lcd_send_nibble(n >> 4); 
00AD:  SWAPF  5E,W
00AE:  MOVWF  5F
00AF:  MOVLW  0F
00B0:  ANDWF  5F,F
00B1:  MOVF   5F,W
00B2:  MOVWF  60
00B3:  CALL   06D
....................       lcd_send_nibble(n & 0xf); 
00B4:  MOVF   5E,W
00B5:  ANDLW  0F
00B6:  MOVWF  5F
00B7:  MOVWF  60
00B8:  CALL   06D
00B9:  RETURN
.................... } 
....................  
....................  
.................... void lcd_init() { 
....................     BYTE i; 
....................  
....................     set_tris_b(LCD_WRITE); 
00BA:  MOVLW  00
00BB:  BSF    03.5
00BC:  MOVWF  06
....................     lcd.rs = 0; 
00BD:  BCF    03.5
00BE:  BCF    06.1
....................     lcd.rw = 0; 
00BF:  BCF    06.2
....................     lcd.enable = 0; 
00C0:  BCF    06.0
....................     delay_ms(15); 
00C1:  MOVLW  0F
00C2:  MOVWF  5A
00C3:  CALL   059
....................     for(i=1;i<=3;++i) { 
00C4:  MOVLW  01
00C5:  MOVWF  48
00C6:  MOVF   48,W
00C7:  SUBLW  03
00C8:  BTFSS  03.0
00C9:  GOTO   0D2
....................        lcd_send_nibble(3); 
00CA:  MOVLW  03
00CB:  MOVWF  60
00CC:  CALL   06D
....................        delay_ms(5); 
00CD:  MOVLW  05
00CE:  MOVWF  5A
00CF:  CALL   059
00D0:  INCF   48,F
00D1:  GOTO   0C6
....................     } 
....................     lcd_send_nibble(2); 
00D2:  MOVLW  02
00D3:  MOVWF  60
00D4:  CALL   06D
....................     for(i=0;i<=3;++i) 
00D5:  CLRF   48
00D6:  MOVF   48,W
00D7:  SUBLW  03
00D8:  BTFSS  03.0
00D9:  GOTO   0E3
....................        lcd_send_byte(0, LCD_INIT_STRING[i]); 
00DA:  MOVF   48,W
00DB:  CALL   004
00DC:  MOVWF  49
00DD:  CLRF   5D
00DE:  MOVF   49,W
00DF:  MOVWF  5E
00E0:  CALL   07E
00E1:  INCF   48,F
00E2:  GOTO   0D6
00E3:  BSF    0A.3
00E4:  BCF    0A.4
00E5:  GOTO   344 (RETURN)
.................... } 
....................  
....................  
.................... void lcd_gotoxy( BYTE x, BYTE y) { 
....................    BYTE address; 
....................  
....................    switch(y) { 
00E6:  MOVLW  01
00E7:  SUBWF  5B,W
00E8:  ADDLW  FC
00E9:  BTFSC  03.0
00EA:  GOTO   0F8
00EB:  ADDLW  04
00EC:  GOTO   100
....................      case 1 : address=0x80;break; 
00ED:  MOVLW  80
00EE:  MOVWF  5C
00EF:  GOTO   0F8
....................      case 2 : address=0xc0;break; 
00F0:  MOVLW  C0
00F1:  MOVWF  5C
00F2:  GOTO   0F8
....................      case 3 : address=0x94;break; 
00F3:  MOVLW  94
00F4:  MOVWF  5C
00F5:  GOTO   0F8
....................      case 4 : address=0xd4;break; 
00F6:  MOVLW  D4
00F7:  MOVWF  5C
....................    } 
....................    address+=x-1; 
00F8:  MOVLW  01
00F9:  SUBWF  5A,W
00FA:  ADDWF  5C,F
....................    lcd_send_byte(0,address); 
00FB:  CLRF   5D
00FC:  MOVF   5C,W
00FD:  MOVWF  5E
00FE:  CALL   07E
00FF:  RETURN
.................... } 
....................  
.................... void lcd_putc( char c) { 
....................    switch (c) { 
*
0108:  MOVF   59,W
0109:  XORLW  0C
010A:  BTFSC  03.2
010B:  GOTO   113
010C:  XORLW  06
010D:  BTFSC  03.2
010E:  GOTO   11D
010F:  XORLW  02
0110:  BTFSC  03.2
0111:  GOTO   124
0112:  GOTO   129
....................      case '\f'   : lcd_send_byte(0,1); 
0113:  CLRF   5D
0114:  MOVLW  01
0115:  MOVWF  5E
0116:  CALL   07E
....................                    lcdline=1; 
0117:  MOVLW  01
0118:  MOVWF  20
....................                    delay_ms(2); 
0119:  MOVLW  02
011A:  MOVWF  5A
011B:  CALL   059
....................                                            break; 
011C:  GOTO   12E
....................      case '\n'   : lcd_gotoxy(1,++lcdline);        break; 
011D:  INCF   20,F
011E:  MOVLW  01
011F:  MOVWF  5A
0120:  MOVF   20,W
0121:  MOVWF  5B
0122:  CALL   0E6
0123:  GOTO   12E
....................      case '\b'   : lcd_send_byte(0,0x10);  break; 
0124:  CLRF   5D
0125:  MOVLW  10
0126:  MOVWF  5E
0127:  CALL   07E
0128:  GOTO   12E
....................      default     : lcd_send_byte(1,c);     break; 
0129:  MOVLW  01
012A:  MOVWF  5D
012B:  MOVF   59,W
012C:  MOVWF  5E
012D:  CALL   07E
....................    } 
012E:  RETURN
.................... } 
....................  
.................... char lcd_getc( BYTE x, BYTE y) { 
....................    char value; 
....................  
....................     lcd_gotoxy(x,y); 
....................     lcd.rs=1; 
....................     value = lcd_read_byte(); 
....................     lcd.rs=0; 
....................     return(value); 
.................... } 
....................  
....................  
.................... // ConnectionsModuleLCD 
.................... #define LCD_RS_PIN PIN_D1 
.................... #define LCD_ENABLE_PIN PIN_D3 
.................... #define LCD_DATA4 PIN_D4 
.................... #define LCD_DATA5 PIN_D5 
.................... #define LCD_DATA6 PIN_D6 
.................... #define LCD_DATA7 PIN_D7//End ConnectionsModuleLCD 
.................... #define ON_OFF PIN_C7 
.................... #define BOUTON PIN_C0 
.................... #define BOUTON_ON input_state(PIN_C0)==0 
.................... #define Choice_bat_ON input_state(PIN_C1)==0 
.................... #define LED_RED PIN_C3 
.................... #define LED_YELLOW PIN_C4 
.................... #define LED_GREEN PIN_C5 
.................... #USE PWM (OUTPUT=PIN_C2, FREQUENCY=50kHz, DUTY=100) 
*
0756:  BSF    03.5
0757:  MOVF   12,W
0758:  BCF    03.5
0759:  MOVWF  4A
075A:  CLRF   4B
075B:  INCF   4A,F
075C:  BTFSC  03.2
075D:  INCF   4B,F
075E:  BCF    03.0
075F:  RLF    4A,F
0760:  RLF    4B,F
0761:  RLF    4A,F
0762:  RLF    4B,F
0763:  CLRF   4E
0764:  CLRF   4D
0765:  MOVF   4B,W
0766:  MOVWF  4C
0767:  MOVF   4A,W
0768:  MOVWF  4B
0769:  CLRF   52
076A:  CLRF   51
076B:  MOVF   49,W
076C:  MOVWF  50
076D:  MOVF   48,W
076E:  MOVWF  4F
*
0798:  MOVF   7A,W
0799:  MOVWF  5C
079A:  MOVF   79,W
079B:  MOVWF  5B
079C:  MOVF   78,W
079D:  MOVWF  5A
079E:  MOVF   77,W
079F:  MOVWF  59
07A0:  CLRF   60
07A1:  CLRF   5F
07A2:  MOVLW  03
07A3:  MOVWF  5E
07A4:  MOVLW  E8
07A5:  MOVWF  5D
07A6:  CALL   707
07A7:  MOVF   77,W
07A8:  MOVWF  79
07A9:  RRF    78,F
07AA:  RRF    77,F
07AB:  RRF    78,F
07AC:  RRF    77,F
07AD:  MOVF   77,W
07AE:  MOVWF  15
07AF:  RLF    79,F
07B0:  RLF    79,F
07B1:  RLF    79,F
07B2:  RLF    79,F
07B3:  MOVLW  CF
07B4:  ANDWF  17,F
07B5:  MOVLW  30
07B6:  ANDWF  79,W
07B7:  IORWF  17,F
07B8:  RETURN
.................... float Voltage_pv; 
.................... float Voltage_bat; 
.................... float Current_pv; 
.................... float Current_bat; 
.................... float Current_ch; 
.................... float Temperature; 
.................... float Voltage_absorption; 
.................... float Voltage_float; 
.................... float alpha; 
.................... int duty; 
.................... char choice_bat; 
.................... const int8 Imin = 1; 
.................... void DisplayFormat(void)  
.................... { 
.................... if(BOUTON_ON) 
*
09A3:  BTFSC  07.0
09A4:  GOTO   295
.................... { 
.................... lcd_putc('\f'); //Clear LCD Screen 
09A5:  MOVLW  0C
09A6:  MOVWF  59
09A7:  BCF    0A.3
09A8:  CALL   108
09A9:  BSF    0A.3
.................... printf(lcd_putc,"Upv = %f V",Voltage_pv); 
09AA:  MOVLW  0C
09AB:  BSF    03.6
09AC:  MOVWF  0D
09AD:  MOVLW  00
09AE:  MOVWF  0F
09AF:  BCF    03.0
09B0:  MOVLW  06
09B1:  BCF    03.6
09B2:  MOVWF  4C
09B3:  CALL   000
09B4:  MOVLW  89
09B5:  MOVWF  04
09B6:  MOVF   25,W
09B7:  MOVWF  4F
09B8:  MOVF   24,W
09B9:  MOVWF  4E
09BA:  MOVF   23,W
09BB:  MOVWF  4D
09BC:  MOVF   22,W
09BD:  MOVWF  4C
09BE:  MOVLW  02
09BF:  MOVWF  50
09C0:  CALL   05B
09C1:  MOVLW  20
09C2:  MOVWF  59
09C3:  BCF    0A.3
09C4:  CALL   108
09C5:  BSF    0A.3
09C6:  MOVLW  56
09C7:  MOVWF  59
09C8:  BCF    0A.3
09C9:  CALL   108
09CA:  BSF    0A.3
.................... lcd_gotoxy(1,2); 
09CB:  MOVLW  01
09CC:  MOVWF  5A
09CD:  MOVLW  02
09CE:  MOVWF  5B
09CF:  BCF    0A.3
09D0:  CALL   0E6
09D1:  BSF    0A.3
.................... printf(lcd_putc,"Ubat = %f V",Voltage_bat); 
09D2:  MOVLW  12
09D3:  BSF    03.6
09D4:  MOVWF  0D
09D5:  MOVLW  00
09D6:  MOVWF  0F
09D7:  BCF    03.0
09D8:  MOVLW  07
09D9:  BCF    03.6
09DA:  MOVWF  4C
09DB:  CALL   000
09DC:  MOVLW  89
09DD:  MOVWF  04
09DE:  MOVF   29,W
09DF:  MOVWF  4F
09E0:  MOVF   28,W
09E1:  MOVWF  4E
09E2:  MOVF   27,W
09E3:  MOVWF  4D
09E4:  MOVF   26,W
09E5:  MOVWF  4C
09E6:  MOVLW  02
09E7:  MOVWF  50
09E8:  CALL   05B
09E9:  MOVLW  20
09EA:  MOVWF  59
09EB:  BCF    0A.3
09EC:  CALL   108
09ED:  BSF    0A.3
09EE:  MOVLW  56
09EF:  MOVWF  59
09F0:  BCF    0A.3
09F1:  CALL   108
09F2:  BSF    0A.3
.................... lcd_gotoxy(1,3); 
09F3:  MOVLW  01
09F4:  MOVWF  5A
09F5:  MOVLW  03
09F6:  MOVWF  5B
09F7:  BCF    0A.3
09F8:  CALL   0E6
09F9:  BSF    0A.3
.................... if(Current_bat>=0) 
09FA:  CLRF   4B
09FB:  CLRF   4A
09FC:  CLRF   49
09FD:  CLRF   48
09FE:  MOVF   31,W
09FF:  MOVWF  4F
0A00:  MOVF   30,W
0A01:  MOVWF  4E
0A02:  MOVF   2F,W
0A03:  MOVWF  4D
0A04:  MOVF   2E,W
0A05:  MOVWF  4C
0A06:  BCF    0A.3
0A07:  CALL   6A9
0A08:  BSF    0A.3
0A09:  BTFSC  03.0
0A0A:  GOTO   20D
0A0B:  BTFSS  03.2
0A0C:  GOTO   22E
.................... { 
.................... printf(lcd_putc,"Ibat = %f A +++",Current_bat); 
0A0D:  MOVLW  18
0A0E:  BSF    03.6
0A0F:  MOVWF  0D
0A10:  MOVLW  00
0A11:  MOVWF  0F
0A12:  BCF    03.0
0A13:  MOVLW  07
0A14:  BCF    03.6
0A15:  MOVWF  4C
0A16:  CALL   000
0A17:  MOVLW  89
0A18:  MOVWF  04
0A19:  MOVF   31,W
0A1A:  MOVWF  4F
0A1B:  MOVF   30,W
0A1C:  MOVWF  4E
0A1D:  MOVF   2F,W
0A1E:  MOVWF  4D
0A1F:  MOVF   2E,W
0A20:  MOVWF  4C
0A21:  MOVLW  02
0A22:  MOVWF  50
0A23:  CALL   05B
0A24:  MOVLW  1C
0A25:  BSF    03.6
0A26:  MOVWF  0D
0A27:  MOVLW  00
0A28:  MOVWF  0F
0A29:  BSF    03.0
0A2A:  MOVLW  06
0A2B:  BCF    03.6
0A2C:  MOVWF  4C
0A2D:  CALL   000
.................... } 
.................... if(Current_bat<0) 
0A2E:  MOVF   31,W
0A2F:  MOVWF  4B
0A30:  MOVF   30,W
0A31:  MOVWF  4A
0A32:  MOVF   2F,W
0A33:  MOVWF  49
0A34:  MOVF   2E,W
0A35:  MOVWF  48
0A36:  CLRF   4F
0A37:  CLRF   4E
0A38:  CLRF   4D
0A39:  CLRF   4C
0A3A:  BCF    0A.3
0A3B:  CALL   6A9
0A3C:  BSF    0A.3
0A3D:  BTFSS  03.0
0A3E:  GOTO   263
.................... { 
.................... Current_bat = - Current_bat; 
0A3F:  MOVF   2F,W
0A40:  XORLW  80
0A41:  MOVWF  2F
.................... printf(lcd_putc,"Ibat = %f A ---",Current_bat); 
0A42:  MOVLW  20
0A43:  BSF    03.6
0A44:  MOVWF  0D
0A45:  MOVLW  00
0A46:  MOVWF  0F
0A47:  BCF    03.0
0A48:  MOVLW  07
0A49:  BCF    03.6
0A4A:  MOVWF  4C
0A4B:  CALL   000
0A4C:  MOVLW  89
0A4D:  MOVWF  04
0A4E:  MOVF   31,W
0A4F:  MOVWF  4F
0A50:  MOVF   30,W
0A51:  MOVWF  4E
0A52:  MOVF   2F,W
0A53:  MOVWF  4D
0A54:  MOVF   2E,W
0A55:  MOVWF  4C
0A56:  MOVLW  02
0A57:  MOVWF  50
0A58:  CALL   05B
0A59:  MOVLW  24
0A5A:  BSF    03.6
0A5B:  MOVWF  0D
0A5C:  MOVLW  00
0A5D:  MOVWF  0F
0A5E:  BSF    03.0
0A5F:  MOVLW  06
0A60:  BCF    03.6
0A61:  MOVWF  4C
0A62:  CALL   000
.................... } 
.................... lcd_gotoxy(1,4); 
0A63:  MOVLW  01
0A64:  MOVWF  5A
0A65:  MOVLW  04
0A66:  MOVWF  5B
0A67:  BCF    0A.3
0A68:  CALL   0E6
0A69:  BSF    0A.3
.................... printf(lcd_putc,"Temp = %f C",Temperature); 
0A6A:  MOVLW  28
0A6B:  BSF    03.6
0A6C:  MOVWF  0D
0A6D:  MOVLW  00
0A6E:  MOVWF  0F
0A6F:  BCF    03.0
0A70:  MOVLW  07
0A71:  BCF    03.6
0A72:  MOVWF  4C
0A73:  CALL   000
0A74:  MOVLW  89
0A75:  MOVWF  04
0A76:  MOVF   39,W
0A77:  MOVWF  4F
0A78:  MOVF   38,W
0A79:  MOVWF  4E
0A7A:  MOVF   37,W
0A7B:  MOVWF  4D
0A7C:  MOVF   36,W
0A7D:  MOVWF  4C
0A7E:  MOVLW  02
0A7F:  MOVWF  50
0A80:  CALL   05B
0A81:  MOVLW  20
0A82:  MOVWF  59
0A83:  BCF    0A.3
0A84:  CALL   108
0A85:  BSF    0A.3
0A86:  MOVLW  43
0A87:  MOVWF  59
0A88:  BCF    0A.3
0A89:  CALL   108
0A8A:  BSF    0A.3
.................... Delay_ms(2000); 
0A8B:  MOVLW  08
0A8C:  MOVWF  48
0A8D:  MOVLW  FA
0A8E:  MOVWF  5A
0A8F:  BCF    0A.3
0A90:  CALL   059
0A91:  BSF    0A.3
0A92:  DECFSZ 48,F
0A93:  GOTO   28D
.................... } 
0A94:  GOTO   315
.................... else 
.................... { 
.................... lcd_putc('\f'); 
0A95:  MOVLW  0C
0A96:  MOVWF  59
0A97:  BCF    0A.3
0A98:  CALL   108
0A99:  BSF    0A.3
.................... //Clear LCD Screenprintf(lcd_putc,"Ipv = %f A",Current_pv); 
.................... lcd_gotoxy(1,2); 
0A9A:  MOVLW  01
0A9B:  MOVWF  5A
0A9C:  MOVLW  02
0A9D:  MOVWF  5B
0A9E:  BCF    0A.3
0A9F:  CALL   0E6
0AA0:  BSF    0A.3
.................... printf(lcd_putc,"Icharge = %f A",Current_ch); 
0AA1:  MOVLW  2E
0AA2:  BSF    03.6
0AA3:  MOVWF  0D
0AA4:  MOVLW  00
0AA5:  MOVWF  0F
0AA6:  BCF    03.0
0AA7:  MOVLW  0A
0AA8:  BCF    03.6
0AA9:  MOVWF  4C
0AAA:  CALL   000
0AAB:  MOVLW  89
0AAC:  MOVWF  04
0AAD:  MOVF   35,W
0AAE:  MOVWF  4F
0AAF:  MOVF   34,W
0AB0:  MOVWF  4E
0AB1:  MOVF   33,W
0AB2:  MOVWF  4D
0AB3:  MOVF   32,W
0AB4:  MOVWF  4C
0AB5:  MOVLW  02
0AB6:  MOVWF  50
0AB7:  CALL   05B
0AB8:  MOVLW  20
0AB9:  MOVWF  59
0ABA:  BCF    0A.3
0ABB:  CALL   108
0ABC:  BSF    0A.3
0ABD:  MOVLW  41
0ABE:  MOVWF  59
0ABF:  BCF    0A.3
0AC0:  CALL   108
0AC1:  BSF    0A.3
.................... lcd_gotoxy(1,3); 
0AC2:  MOVLW  01
0AC3:  MOVWF  5A
0AC4:  MOVLW  03
0AC5:  MOVWF  5B
0AC6:  BCF    0A.3
0AC7:  CALL   0E6
0AC8:  BSF    0A.3
.................... printf(lcd_putc,"alpha = %f%%",alpha*100); 
0AC9:  MOVF   45,W
0ACA:  MOVWF  5C
0ACB:  MOVF   44,W
0ACC:  MOVWF  5B
0ACD:  MOVF   43,W
0ACE:  MOVWF  5A
0ACF:  MOVF   42,W
0AD0:  MOVWF  59
0AD1:  CLRF   60
0AD2:  CLRF   5F
0AD3:  MOVLW  48
0AD4:  MOVWF  5E
0AD5:  MOVLW  85
0AD6:  MOVWF  5D
0AD7:  BCF    0A.3
0AD8:  CALL   216
0AD9:  BSF    0A.3
0ADA:  MOVF   7A,W
0ADB:  MOVWF  4B
0ADC:  MOVF   79,W
0ADD:  MOVWF  4A
0ADE:  MOVF   78,W
0ADF:  MOVWF  49
0AE0:  MOVF   77,W
0AE1:  MOVWF  48
0AE2:  MOVLW  36
0AE3:  BSF    03.6
0AE4:  MOVWF  0D
0AE5:  MOVLW  00
0AE6:  MOVWF  0F
0AE7:  BCF    03.0
0AE8:  MOVLW  08
0AE9:  BCF    03.6
0AEA:  MOVWF  4C
0AEB:  CALL   000
0AEC:  MOVLW  89
0AED:  MOVWF  04
0AEE:  MOVF   4B,W
0AEF:  MOVWF  4F
0AF0:  MOVF   4A,W
0AF1:  MOVWF  4E
0AF2:  MOVF   49,W
0AF3:  MOVWF  4D
0AF4:  MOVF   48,W
0AF5:  MOVWF  4C
0AF6:  MOVLW  02
0AF7:  MOVWF  50
0AF8:  CALL   05B
0AF9:  MOVLW  25
0AFA:  MOVWF  59
0AFB:  BCF    0A.3
0AFC:  CALL   108
0AFD:  BSF    0A.3
.................... lcd_gotoxy(1,4); 
0AFE:  MOVLW  01
0AFF:  MOVWF  5A
0B00:  MOVLW  04
0B01:  MOVWF  5B
0B02:  BCF    0A.3
0B03:  CALL   0E6
0B04:  BSF    0A.3
.................... lcd_putc("Frequency = 50kHz"); 
0B05:  MOVLW  3D
0B06:  BSF    03.6
0B07:  MOVWF  0D
0B08:  MOVLW  00
0B09:  MOVWF  0F
0B0A:  BCF    03.6
0B0B:  CALL   149
.................... Delay_ms(2000); 
0B0C:  MOVLW  08
0B0D:  MOVWF  48
0B0E:  MOVLW  FA
0B0F:  MOVWF  5A
0B10:  BCF    0A.3
0B11:  CALL   059
0B12:  BSF    0A.3
0B13:  DECFSZ 48,F
0B14:  GOTO   30E
.................... } 
0B15:  RETURN
.................... } 
.................... void Mesure(void)  
.................... { 
.................... set_adc_channel(2); 
*
03CC:  MOVLW  10
03CD:  MOVWF  78
03CE:  MOVF   1F,W
03CF:  ANDLW  C7
03D0:  IORWF  78,W
03D1:  MOVWF  1F
.................... Delay_ms(10); 
03D2:  MOVLW  0A
03D3:  MOVWF  5A
03D4:  CALL   059
.................... Voltage_bat = read_adc(); 
03D5:  BSF    1F.2
03D6:  BTFSC  1F.2
03D7:  GOTO   3D6
03D8:  MOVF   1E,W
03D9:  CLRF   4D
03DA:  MOVWF  4C
03DB:  CALL   12F
03DC:  MOVF   7A,W
03DD:  MOVWF  29
03DE:  MOVF   79,W
03DF:  MOVWF  28
03E0:  MOVF   78,W
03E1:  MOVWF  27
03E2:  MOVF   77,W
03E3:  MOVWF  26
.................... Delay_ms(10); 
03E4:  MOVLW  0A
03E5:  MOVWF  5A
03E6:  CALL   059
.................... Voltage_bat = (Voltage_bat/1023)*5*6; 
03E7:  MOVF   29,W
03E8:  MOVWF  4B
03E9:  MOVF   28,W
03EA:  MOVWF  4A
03EB:  MOVF   27,W
03EC:  MOVWF  49
03ED:  MOVF   26,W
03EE:  MOVWF  48
03EF:  CLRF   4F
03F0:  MOVLW  C0
03F1:  MOVWF  4E
03F2:  MOVLW  7F
03F3:  MOVWF  4D
03F4:  MOVLW  88
03F5:  MOVWF  4C
03F6:  CALL   14C
03F7:  MOVF   7A,W
03F8:  MOVWF  4B
03F9:  MOVF   79,W
03FA:  MOVWF  4A
03FB:  MOVF   78,W
03FC:  MOVWF  49
03FD:  MOVF   77,W
03FE:  MOVWF  48
03FF:  MOVF   7A,W
0400:  MOVWF  5C
0401:  MOVF   79,W
0402:  MOVWF  5B
0403:  MOVF   78,W
0404:  MOVWF  5A
0405:  MOVF   77,W
0406:  MOVWF  59
0407:  CLRF   60
0408:  CLRF   5F
0409:  MOVLW  20
040A:  MOVWF  5E
040B:  MOVLW  81
040C:  MOVWF  5D
040D:  CALL   216
040E:  MOVF   7A,W
040F:  MOVWF  4B
0410:  MOVF   79,W
0411:  MOVWF  4A
0412:  MOVF   78,W
0413:  MOVWF  49
0414:  MOVF   77,W
0415:  MOVWF  48
0416:  MOVF   7A,W
0417:  MOVWF  5C
0418:  MOVF   79,W
0419:  MOVWF  5B
041A:  MOVF   78,W
041B:  MOVWF  5A
041C:  MOVF   77,W
041D:  MOVWF  59
041E:  CLRF   60
041F:  CLRF   5F
0420:  MOVLW  40
0421:  MOVWF  5E
0422:  MOVLW  81
0423:  MOVWF  5D
0424:  CALL   216
0425:  MOVF   7A,W
0426:  MOVWF  29
0427:  MOVF   79,W
0428:  MOVWF  28
0429:  MOVF   78,W
042A:  MOVWF  27
042B:  MOVF   77,W
042C:  MOVWF  26
.................... set_adc_channel(0);Delay_ms(10); 
042D:  MOVLW  00
042E:  MOVWF  78
042F:  MOVF   1F,W
0430:  ANDLW  C7
0431:  IORWF  78,W
0432:  MOVWF  1F
0433:  MOVLW  0A
0434:  MOVWF  5A
0435:  CALL   059
.................... Voltage_pv = read_adc(); 
0436:  BSF    1F.2
0437:  BTFSC  1F.2
0438:  GOTO   437
0439:  MOVF   1E,W
043A:  CLRF   4D
043B:  MOVWF  4C
043C:  CALL   12F
043D:  MOVF   7A,W
043E:  MOVWF  25
043F:  MOVF   79,W
0440:  MOVWF  24
0441:  MOVF   78,W
0442:  MOVWF  23
0443:  MOVF   77,W
0444:  MOVWF  22
.................... Delay_ms(10); 
0445:  MOVLW  0A
0446:  MOVWF  5A
0447:  CALL   059
.................... Voltage_pv = (Voltage_pv/1023)*5*4; 
0448:  MOVF   25,W
0449:  MOVWF  4B
044A:  MOVF   24,W
044B:  MOVWF  4A
044C:  MOVF   23,W
044D:  MOVWF  49
044E:  MOVF   22,W
044F:  MOVWF  48
0450:  CLRF   4F
0451:  MOVLW  C0
0452:  MOVWF  4E
0453:  MOVLW  7F
0454:  MOVWF  4D
0455:  MOVLW  88
0456:  MOVWF  4C
0457:  CALL   14C
0458:  MOVF   7A,W
0459:  MOVWF  4B
045A:  MOVF   79,W
045B:  MOVWF  4A
045C:  MOVF   78,W
045D:  MOVWF  49
045E:  MOVF   77,W
045F:  MOVWF  48
0460:  MOVF   7A,W
0461:  MOVWF  5C
0462:  MOVF   79,W
0463:  MOVWF  5B
0464:  MOVF   78,W
0465:  MOVWF  5A
0466:  MOVF   77,W
0467:  MOVWF  59
0468:  CLRF   60
0469:  CLRF   5F
046A:  MOVLW  20
046B:  MOVWF  5E
046C:  MOVLW  81
046D:  MOVWF  5D
046E:  CALL   216
046F:  MOVF   7A,W
0470:  MOVWF  4B
0471:  MOVF   79,W
0472:  MOVWF  4A
0473:  MOVF   78,W
0474:  MOVWF  49
0475:  MOVF   77,W
0476:  MOVWF  48
0477:  MOVF   7A,W
0478:  MOVWF  5C
0479:  MOVF   79,W
047A:  MOVWF  5B
047B:  MOVF   78,W
047C:  MOVWF  5A
047D:  MOVF   77,W
047E:  MOVWF  59
047F:  CLRF   60
0480:  CLRF   5F
0481:  CLRF   5E
0482:  MOVLW  81
0483:  MOVWF  5D
0484:  CALL   216
0485:  MOVF   7A,W
0486:  MOVWF  25
0487:  MOVF   79,W
0488:  MOVWF  24
0489:  MOVF   78,W
048A:  MOVWF  23
048B:  MOVF   77,W
048C:  MOVWF  22
.................... set_adc_channel(3); 
048D:  MOVLW  18
048E:  MOVWF  78
048F:  MOVF   1F,W
0490:  ANDLW  C7
0491:  IORWF  78,W
0492:  MOVWF  1F
.................... Delay_ms(10); 
0493:  MOVLW  0A
0494:  MOVWF  5A
0495:  CALL   059
.................... Voltage_bat = read_adc(); 
0496:  BSF    1F.2
0497:  BTFSC  1F.2
0498:  GOTO   497
0499:  MOVF   1E,W
049A:  CLRF   4D
049B:  MOVWF  4C
049C:  CALL   12F
049D:  MOVF   7A,W
049E:  MOVWF  29
049F:  MOVF   79,W
04A0:  MOVWF  28
04A1:  MOVF   78,W
04A2:  MOVWF  27
04A3:  MOVF   77,W
04A4:  MOVWF  26
.................... Delay_ms(10); 
04A5:  MOVLW  0A
04A6:  MOVWF  5A
04A7:  CALL   059
.................... Current_bat = (Current_bat/1023)*5; 
04A8:  MOVF   31,W
04A9:  MOVWF  4B
04AA:  MOVF   30,W
04AB:  MOVWF  4A
04AC:  MOVF   2F,W
04AD:  MOVWF  49
04AE:  MOVF   2E,W
04AF:  MOVWF  48
04B0:  CLRF   4F
04B1:  MOVLW  C0
04B2:  MOVWF  4E
04B3:  MOVLW  7F
04B4:  MOVWF  4D
04B5:  MOVLW  88
04B6:  MOVWF  4C
04B7:  CALL   14C
04B8:  MOVF   7A,W
04B9:  MOVWF  4B
04BA:  MOVF   79,W
04BB:  MOVWF  4A
04BC:  MOVF   78,W
04BD:  MOVWF  49
04BE:  MOVF   77,W
04BF:  MOVWF  48
04C0:  MOVF   7A,W
04C1:  MOVWF  5C
04C2:  MOVF   79,W
04C3:  MOVWF  5B
04C4:  MOVF   78,W
04C5:  MOVWF  5A
04C6:  MOVF   77,W
04C7:  MOVWF  59
04C8:  CLRF   60
04C9:  CLRF   5F
04CA:  MOVLW  20
04CB:  MOVWF  5E
04CC:  MOVLW  81
04CD:  MOVWF  5D
04CE:  CALL   216
04CF:  MOVF   7A,W
04D0:  MOVWF  31
04D1:  MOVF   79,W
04D2:  MOVWF  30
04D3:  MOVF   78,W
04D4:  MOVWF  2F
04D5:  MOVF   77,W
04D6:  MOVWF  2E
.................... Current_bat = 10*Current_bat-25; 
04D7:  CLRF   5C
04D8:  CLRF   5B
04D9:  MOVLW  20
04DA:  MOVWF  5A
04DB:  MOVLW  82
04DC:  MOVWF  59
04DD:  MOVF   31,W
04DE:  MOVWF  60
04DF:  MOVF   30,W
04E0:  MOVWF  5F
04E1:  MOVF   2F,W
04E2:  MOVWF  5E
04E3:  MOVF   2E,W
04E4:  MOVWF  5D
04E5:  CALL   216
04E6:  MOVF   7A,W
04E7:  MOVWF  4B
04E8:  MOVF   79,W
04E9:  MOVWF  4A
04EA:  MOVF   78,W
04EB:  MOVWF  49
04EC:  MOVF   77,W
04ED:  MOVWF  48
04EE:  BSF    03.1
04EF:  MOVF   7A,W
04F0:  MOVWF  4F
04F1:  MOVF   79,W
04F2:  MOVWF  4E
04F3:  MOVF   78,W
04F4:  MOVWF  4D
04F5:  MOVF   77,W
04F6:  MOVWF  4C
04F7:  CLRF   53
04F8:  CLRF   52
04F9:  MOVLW  48
04FA:  MOVWF  51
04FB:  MOVLW  83
04FC:  MOVWF  50
04FD:  CALL   28B
04FE:  MOVF   7A,W
04FF:  MOVWF  31
0500:  MOVF   79,W
0501:  MOVWF  30
0502:  MOVF   78,W
0503:  MOVWF  2F
0504:  MOVF   77,W
0505:  MOVWF  2E
.................... set_adc_channel(1); 
0506:  MOVLW  08
0507:  MOVWF  78
0508:  MOVF   1F,W
0509:  ANDLW  C7
050A:  IORWF  78,W
050B:  MOVWF  1F
.................... Delay_ms(10); 
050C:  MOVLW  0A
050D:  MOVWF  5A
050E:  CALL   059
.................... Current_pv = read_adc(); 
050F:  BSF    1F.2
0510:  BTFSC  1F.2
0511:  GOTO   510
0512:  MOVF   1E,W
0513:  CLRF   4D
0514:  MOVWF  4C
0515:  CALL   12F
0516:  MOVF   7A,W
0517:  MOVWF  2D
0518:  MOVF   79,W
0519:  MOVWF  2C
051A:  MOVF   78,W
051B:  MOVWF  2B
051C:  MOVF   77,W
051D:  MOVWF  2A
.................... Delay_ms(10); 
051E:  MOVLW  0A
051F:  MOVWF  5A
0520:  CALL   059
.................... Current_pv = (Current_pv/1023)*5; 
0521:  MOVF   2D,W
0522:  MOVWF  4B
0523:  MOVF   2C,W
0524:  MOVWF  4A
0525:  MOVF   2B,W
0526:  MOVWF  49
0527:  MOVF   2A,W
0528:  MOVWF  48
0529:  CLRF   4F
052A:  MOVLW  C0
052B:  MOVWF  4E
052C:  MOVLW  7F
052D:  MOVWF  4D
052E:  MOVLW  88
052F:  MOVWF  4C
0530:  CALL   14C
0531:  MOVF   7A,W
0532:  MOVWF  4B
0533:  MOVF   79,W
0534:  MOVWF  4A
0535:  MOVF   78,W
0536:  MOVWF  49
0537:  MOVF   77,W
0538:  MOVWF  48
0539:  MOVF   7A,W
053A:  MOVWF  5C
053B:  MOVF   79,W
053C:  MOVWF  5B
053D:  MOVF   78,W
053E:  MOVWF  5A
053F:  MOVF   77,W
0540:  MOVWF  59
0541:  CLRF   60
0542:  CLRF   5F
0543:  MOVLW  20
0544:  MOVWF  5E
0545:  MOVLW  81
0546:  MOVWF  5D
0547:  CALL   216
0548:  MOVF   7A,W
0549:  MOVWF  2D
054A:  MOVF   79,W
054B:  MOVWF  2C
054C:  MOVF   78,W
054D:  MOVWF  2B
054E:  MOVF   77,W
054F:  MOVWF  2A
.................... Current_pv = 10*Current_pv-25; 
0550:  CLRF   5C
0551:  CLRF   5B
0552:  MOVLW  20
0553:  MOVWF  5A
0554:  MOVLW  82
0555:  MOVWF  59
0556:  MOVF   2D,W
0557:  MOVWF  60
0558:  MOVF   2C,W
0559:  MOVWF  5F
055A:  MOVF   2B,W
055B:  MOVWF  5E
055C:  MOVF   2A,W
055D:  MOVWF  5D
055E:  CALL   216
055F:  MOVF   7A,W
0560:  MOVWF  4B
0561:  MOVF   79,W
0562:  MOVWF  4A
0563:  MOVF   78,W
0564:  MOVWF  49
0565:  MOVF   77,W
0566:  MOVWF  48
0567:  BSF    03.1
0568:  MOVF   7A,W
0569:  MOVWF  4F
056A:  MOVF   79,W
056B:  MOVWF  4E
056C:  MOVF   78,W
056D:  MOVWF  4D
056E:  MOVF   77,W
056F:  MOVWF  4C
0570:  CLRF   53
0571:  CLRF   52
0572:  MOVLW  48
0573:  MOVWF  51
0574:  MOVLW  83
0575:  MOVWF  50
0576:  CALL   28B
0577:  MOVF   7A,W
0578:  MOVWF  2D
0579:  MOVF   79,W
057A:  MOVWF  2C
057B:  MOVF   78,W
057C:  MOVWF  2B
057D:  MOVF   77,W
057E:  MOVWF  2A
.................... set_adc_channel(4);Delay_ms(10); 
057F:  MOVLW  20
0580:  MOVWF  78
0581:  MOVF   1F,W
0582:  ANDLW  C7
0583:  IORWF  78,W
0584:  MOVWF  1F
0585:  MOVLW  0A
0586:  MOVWF  5A
0587:  CALL   059
.................... Temperature = read_adc(); 
0588:  BSF    1F.2
0589:  BTFSC  1F.2
058A:  GOTO   589
058B:  MOVF   1E,W
058C:  CLRF   4D
058D:  MOVWF  4C
058E:  CALL   12F
058F:  MOVF   7A,W
0590:  MOVWF  39
0591:  MOVF   79,W
0592:  MOVWF  38
0593:  MOVF   78,W
0594:  MOVWF  37
0595:  MOVF   77,W
0596:  MOVWF  36
.................... Delay_ms(10); 
0597:  MOVLW  0A
0598:  MOVWF  5A
0599:  CALL   059
.................... Temperature = (Temperature/1023)*5; 
059A:  MOVF   39,W
059B:  MOVWF  4B
059C:  MOVF   38,W
059D:  MOVWF  4A
059E:  MOVF   37,W
059F:  MOVWF  49
05A0:  MOVF   36,W
05A1:  MOVWF  48
05A2:  CLRF   4F
05A3:  MOVLW  C0
05A4:  MOVWF  4E
05A5:  MOVLW  7F
05A6:  MOVWF  4D
05A7:  MOVLW  88
05A8:  MOVWF  4C
05A9:  CALL   14C
05AA:  MOVF   7A,W
05AB:  MOVWF  4B
05AC:  MOVF   79,W
05AD:  MOVWF  4A
05AE:  MOVF   78,W
05AF:  MOVWF  49
05B0:  MOVF   77,W
05B1:  MOVWF  48
05B2:  MOVF   7A,W
05B3:  MOVWF  5C
05B4:  MOVF   79,W
05B5:  MOVWF  5B
05B6:  MOVF   78,W
05B7:  MOVWF  5A
05B8:  MOVF   77,W
05B9:  MOVWF  59
05BA:  CLRF   60
05BB:  CLRF   5F
05BC:  MOVLW  20
05BD:  MOVWF  5E
05BE:  MOVLW  81
05BF:  MOVWF  5D
05C0:  CALL   216
05C1:  MOVF   7A,W
05C2:  MOVWF  39
05C3:  MOVF   79,W
05C4:  MOVWF  38
05C5:  MOVF   78,W
05C6:  MOVWF  37
05C7:  MOVF   77,W
05C8:  MOVWF  36
.................... Temperature = Temperature*12.5; 
05C9:  MOVF   39,W
05CA:  MOVWF  5C
05CB:  MOVF   38,W
05CC:  MOVWF  5B
05CD:  MOVF   37,W
05CE:  MOVWF  5A
05CF:  MOVF   36,W
05D0:  MOVWF  59
05D1:  CLRF   60
05D2:  CLRF   5F
05D3:  MOVLW  48
05D4:  MOVWF  5E
05D5:  MOVLW  82
05D6:  MOVWF  5D
05D7:  CALL   216
05D8:  MOVF   7A,W
05D9:  MOVWF  39
05DA:  MOVF   79,W
05DB:  MOVWF  38
05DC:  MOVF   78,W
05DD:  MOVWF  37
05DE:  MOVF   77,W
05DF:  MOVWF  36
.................... Voltage_absorption = (14.5-0.03*(Temperature-25))*choice_bat; 
05E0:  BSF    03.1
05E1:  MOVF   39,W
05E2:  MOVWF  4F
05E3:  MOVF   38,W
05E4:  MOVWF  4E
05E5:  MOVF   37,W
05E6:  MOVWF  4D
05E7:  MOVF   36,W
05E8:  MOVWF  4C
05E9:  CLRF   53
05EA:  CLRF   52
05EB:  MOVLW  48
05EC:  MOVWF  51
05ED:  MOVLW  83
05EE:  MOVWF  50
05EF:  CALL   28B
05F0:  MOVLW  8F
05F1:  MOVWF  5C
05F2:  MOVLW  C2
05F3:  MOVWF  5B
05F4:  MOVLW  75
05F5:  MOVWF  5A
05F6:  MOVLW  79
05F7:  MOVWF  59
05F8:  MOVF   7A,W
05F9:  MOVWF  60
05FA:  MOVF   79,W
05FB:  MOVWF  5F
05FC:  MOVF   78,W
05FD:  MOVWF  5E
05FE:  MOVF   77,W
05FF:  MOVWF  5D
0600:  CALL   216
0601:  BSF    03.1
0602:  CLRF   4F
0603:  CLRF   4E
0604:  MOVLW  68
0605:  MOVWF  4D
0606:  MOVLW  82
0607:  MOVWF  4C
0608:  MOVF   7A,W
0609:  MOVWF  53
060A:  MOVF   79,W
060B:  MOVWF  52
060C:  MOVF   78,W
060D:  MOVWF  51
060E:  MOVF   77,W
060F:  MOVWF  50
0610:  CALL   28B
0611:  MOVF   7A,W
0612:  MOVWF  4B
0613:  MOVF   79,W
0614:  MOVWF  4A
0615:  MOVF   78,W
0616:  MOVWF  49
0617:  MOVF   77,W
0618:  MOVWF  48
0619:  CLRF   4D
061A:  MOVF   47,W
061B:  MOVWF  4C
061C:  CALL   12F
061D:  MOVF   4B,W
061E:  MOVWF  5C
061F:  MOVF   4A,W
0620:  MOVWF  5B
0621:  MOVF   49,W
0622:  MOVWF  5A
0623:  MOVF   48,W
0624:  MOVWF  59
0625:  MOVF   7A,W
0626:  MOVWF  60
0627:  MOVF   79,W
0628:  MOVWF  5F
0629:  MOVF   78,W
062A:  MOVWF  5E
062B:  MOVF   77,W
062C:  MOVWF  5D
062D:  CALL   216
062E:  MOVF   7A,W
062F:  MOVWF  3D
0630:  MOVF   79,W
0631:  MOVWF  3C
0632:  MOVF   78,W
0633:  MOVWF  3B
0634:  MOVF   77,W
0635:  MOVWF  3A
.................... Voltage_float = (13.6-0.03*(Temperature-25))*choice_bat; 
0636:  BSF    03.1
0637:  MOVF   39,W
0638:  MOVWF  4F
0639:  MOVF   38,W
063A:  MOVWF  4E
063B:  MOVF   37,W
063C:  MOVWF  4D
063D:  MOVF   36,W
063E:  MOVWF  4C
063F:  CLRF   53
0640:  CLRF   52
0641:  MOVLW  48
0642:  MOVWF  51
0643:  MOVLW  83
0644:  MOVWF  50
0645:  CALL   28B
0646:  MOVLW  8F
0647:  MOVWF  5C
0648:  MOVLW  C2
0649:  MOVWF  5B
064A:  MOVLW  75
064B:  MOVWF  5A
064C:  MOVLW  79
064D:  MOVWF  59
064E:  MOVF   7A,W
064F:  MOVWF  60
0650:  MOVF   79,W
0651:  MOVWF  5F
0652:  MOVF   78,W
0653:  MOVWF  5E
0654:  MOVF   77,W
0655:  MOVWF  5D
0656:  CALL   216
0657:  BSF    03.1
0658:  MOVLW  9A
0659:  MOVWF  4F
065A:  MOVLW  99
065B:  MOVWF  4E
065C:  MOVLW  59
065D:  MOVWF  4D
065E:  MOVLW  82
065F:  MOVWF  4C
0660:  MOVF   7A,W
0661:  MOVWF  53
0662:  MOVF   79,W
0663:  MOVWF  52
0664:  MOVF   78,W
0665:  MOVWF  51
0666:  MOVF   77,W
0667:  MOVWF  50
0668:  CALL   28B
0669:  MOVF   7A,W
066A:  MOVWF  4B
066B:  MOVF   79,W
066C:  MOVWF  4A
066D:  MOVF   78,W
066E:  MOVWF  49
066F:  MOVF   77,W
0670:  MOVWF  48
0671:  CLRF   4D
0672:  MOVF   47,W
0673:  MOVWF  4C
0674:  CALL   12F
0675:  MOVF   4B,W
0676:  MOVWF  5C
0677:  MOVF   4A,W
0678:  MOVWF  5B
0679:  MOVF   49,W
067A:  MOVWF  5A
067B:  MOVF   48,W
067C:  MOVWF  59
067D:  MOVF   7A,W
067E:  MOVWF  60
067F:  MOVF   79,W
0680:  MOVWF  5F
0681:  MOVF   78,W
0682:  MOVWF  5E
0683:  MOVF   77,W
0684:  MOVWF  5D
0685:  CALL   216
0686:  MOVF   7A,W
0687:  MOVWF  41
0688:  MOVF   79,W
0689:  MOVWF  40
068A:  MOVF   78,W
068B:  MOVWF  3F
068C:  MOVF   77,W
068D:  MOVWF  3E
.................... Current_ch = Current_pv - Current_bat; 
068E:  BSF    03.1
068F:  MOVF   2D,W
0690:  MOVWF  4F
0691:  MOVF   2C,W
0692:  MOVWF  4E
0693:  MOVF   2B,W
0694:  MOVWF  4D
0695:  MOVF   2A,W
0696:  MOVWF  4C
0697:  MOVF   31,W
0698:  MOVWF  53
0699:  MOVF   30,W
069A:  MOVWF  52
069B:  MOVF   2F,W
069C:  MOVWF  51
069D:  MOVF   2E,W
069E:  MOVWF  50
069F:  CALL   28B
06A0:  MOVF   7A,W
06A1:  MOVWF  35
06A2:  MOVF   79,W
06A3:  MOVWF  34
06A4:  MOVF   78,W
06A5:  MOVWF  33
06A6:  MOVF   77,W
06A7:  MOVWF  32
06A8:  RETURN
.................... } 
.................... void main() 
*
0B16:  MOVF   03,W
0B17:  ANDLW  1F
0B18:  MOVWF  03
0B19:  MOVLW  FF
0B1A:  MOVWF  21
0B1B:  MOVLW  63
0B1C:  BSF    03.5
0B1D:  MOVWF  12
0B1E:  MOVLW  04
0B1F:  BCF    03.5
0B20:  MOVWF  12
0B21:  BCF    21.2
0B22:  MOVF   21,W
0B23:  BSF    03.5
0B24:  MOVWF  07
0B25:  MOVLW  63
0B26:  BCF    03.5
0B27:  MOVWF  15
0B28:  MOVLW  3C
0B29:  MOVWF  17
0B2A:  BSF    03.5
0B2B:  BSF    1F.0
0B2C:  BSF    1F.1
0B2D:  BSF    1F.2
0B2E:  BCF    1F.3
0B2F:  BCF    03.7
.................... { 
.................... setup_adc(ADC_CLOCK_INTERNAL); 
0B30:  BCF    03.5
0B31:  BSF    1F.6
0B32:  BSF    1F.7
0B33:  BSF    03.5
0B34:  BCF    1F.7
0B35:  BCF    03.5
0B36:  BSF    1F.0
.................... setup_adc_ports(AN0_AN1_AN2_AN3_AN4); 
0B37:  BSF    03.5
0B38:  BCF    1F.0
0B39:  BSF    1F.1
0B3A:  BCF    1F.2
0B3B:  BCF    1F.3
.................... set_tris_a(0xFF); 
0B3C:  MOVLW  FF
0B3D:  MOVWF  05
.................... set_tris_c(0b00000011); 
0B3E:  MOVLW  03
0B3F:  MOVWF  07
0B40:  BCF    03.5
0B41:  MOVWF  21
.................... lcd_init(); 
0B42:  BCF    0A.3
0B43:  GOTO   0BA
0B44:  BSF    0A.3
.................... Delay_ms(100); 
0B45:  MOVLW  64
0B46:  MOVWF  5A
0B47:  BCF    0A.3
0B48:  CALL   059
0B49:  BSF    0A.3
.................... while(TRUE) 
.................... { 
.................... if (Choice_bat_ON) 
0B4A:  BTFSC  07.1
0B4B:  GOTO   34F
.................... { 
.................... choice_bat=1; 
0B4C:  MOVLW  01
0B4D:  MOVWF  47
.................... } 
0B4E:  GOTO   351
.................... else  
.................... { 
.................... choice_bat=2; 
0B4F:  MOVLW  02
0B50:  MOVWF  47
.................... } 
.................... lcd_putc('\f'); 
0B51:  MOVLW  0C
0B52:  MOVWF  59
0B53:  BCF    0A.3
0B54:  CALL   108
0B55:  BSF    0A.3
.................... Mesure(); 
0B56:  BCF    0A.3
0B57:  CALL   3CC
0B58:  BSF    0A.3
.................... Delay_ms(500); 
0B59:  MOVLW  02
0B5A:  MOVWF  48
0B5B:  MOVLW  FA
0B5C:  MOVWF  5A
0B5D:  BCF    0A.3
0B5E:  CALL   059
0B5F:  BSF    0A.3
0B60:  DECFSZ 48,F
0B61:  GOTO   35B
.................... while(Voltage_bat <= (Voltage_absorption) &&Voltage_bat>= (12.6*choice_bat) )  
0B62:  MOVF   29,W
0B63:  MOVWF  4B
0B64:  MOVF   28,W
0B65:  MOVWF  4A
0B66:  MOVF   27,W
0B67:  MOVWF  49
0B68:  MOVF   26,W
0B69:  MOVWF  48
0B6A:  MOVF   3D,W
0B6B:  MOVWF  4F
0B6C:  MOVF   3C,W
0B6D:  MOVWF  4E
0B6E:  MOVF   3B,W
0B6F:  MOVWF  4D
0B70:  MOVF   3A,W
0B71:  MOVWF  4C
0B72:  BCF    0A.3
0B73:  CALL   6A9
0B74:  BSF    0A.3
0B75:  BTFSC  03.0
0B76:  GOTO   379
0B77:  BTFSS  03.2
0B78:  GOTO   3F6
0B79:  CLRF   4D
0B7A:  MOVF   47,W
0B7B:  MOVWF  4C
0B7C:  BCF    0A.3
0B7D:  CALL   12F
0B7E:  BSF    0A.3
0B7F:  MOVLW  9A
0B80:  MOVWF  5C
0B81:  MOVLW  99
0B82:  MOVWF  5B
0B83:  MOVLW  49
0B84:  MOVWF  5A
0B85:  MOVLW  82
0B86:  MOVWF  59
0B87:  MOVF   7A,W
0B88:  MOVWF  60
0B89:  MOVF   79,W
0B8A:  MOVWF  5F
0B8B:  MOVF   78,W
0B8C:  MOVWF  5E
0B8D:  MOVF   77,W
0B8E:  MOVWF  5D
0B8F:  BCF    0A.3
0B90:  CALL   216
0B91:  BSF    0A.3
0B92:  MOVF   7A,W
0B93:  MOVWF  4B
0B94:  MOVF   79,W
0B95:  MOVWF  4A
0B96:  MOVF   78,W
0B97:  MOVWF  49
0B98:  MOVF   77,W
0B99:  MOVWF  48
0B9A:  MOVF   29,W
0B9B:  MOVWF  4F
0B9C:  MOVF   28,W
0B9D:  MOVWF  4E
0B9E:  MOVF   27,W
0B9F:  MOVWF  4D
0BA0:  MOVF   26,W
0BA1:  MOVWF  4C
0BA2:  BCF    0A.3
0BA3:  CALL   6A9
0BA4:  BSF    0A.3
0BA5:  BTFSC  03.0
0BA6:  GOTO   3A9
0BA7:  BTFSS  03.2
0BA8:  GOTO   3F6
.................... { 
.................... lcd_putc('\f'); 
0BA9:  MOVLW  0C
0BAA:  MOVWF  59
0BAB:  BCF    0A.3
0BAC:  CALL   108
0BAD:  BSF    0A.3
.................... Mesure(); 
0BAE:  BCF    0A.3
0BAF:  CALL   3CC
0BB0:  BSF    0A.3
.................... output_high(ON_OFF); 
0BB1:  BCF    21.7
0BB2:  MOVF   21,W
0BB3:  BSF    03.5
0BB4:  MOVWF  07
0BB5:  BCF    03.5
0BB6:  BSF    07.7
.................... output_low(LED_YELLOW); 
0BB7:  BCF    21.4
0BB8:  MOVF   21,W
0BB9:  BSF    03.5
0BBA:  MOVWF  07
0BBB:  BCF    03.5
0BBC:  BCF    07.4
.................... output_low(LED_GREEN); 
0BBD:  BCF    21.5
0BBE:  MOVF   21,W
0BBF:  BSF    03.5
0BC0:  MOVWF  07
0BC1:  BCF    03.5
0BC2:  BCF    07.5
.................... output_high(LED_RED); 
0BC3:  BCF    21.3
0BC4:  MOVF   21,W
0BC5:  BSF    03.5
0BC6:  MOVWF  07
0BC7:  BCF    03.5
0BC8:  BSF    07.3
.................... alpha=1; 
0BC9:  CLRF   45
0BCA:  CLRF   44
0BCB:  CLRF   43
0BCC:  MOVLW  7F
0BCD:  MOVWF  42
.................... pwm_on(); 
0BCE:  MOVLW  0C
0BCF:  MOVWF  17
.................... duty = 1000*alpha; 
0BD0:  CLRF   5C
0BD1:  CLRF   5B
0BD2:  MOVLW  7A
0BD3:  MOVWF  5A
0BD4:  MOVLW  88
0BD5:  MOVWF  59
0BD6:  MOVF   45,W
0BD7:  MOVWF  60
0BD8:  MOVF   44,W
0BD9:  MOVWF  5F
0BDA:  MOVF   43,W
0BDB:  MOVWF  5E
0BDC:  MOVF   42,W
0BDD:  MOVWF  5D
0BDE:  BCF    0A.3
0BDF:  CALL   216
0BE0:  BSF    0A.3
0BE1:  MOVF   7A,W
0BE2:  MOVWF  4B
0BE3:  MOVF   79,W
0BE4:  MOVWF  4A
0BE5:  MOVF   78,W
0BE6:  MOVWF  49
0BE7:  MOVF   77,W
0BE8:  MOVWF  48
0BE9:  BCF    0A.3
0BEA:  CALL   6E8
0BEB:  BSF    0A.3
0BEC:  MOVF   78,W
0BED:  MOVWF  46
.................... pwm_set_duty_percent(duty);//Viewing 
0BEE:  CLRF   49
0BEF:  MOVF   46,W
0BF0:  MOVWF  48
0BF1:  BCF    0A.3
0BF2:  CALL   756
0BF3:  BSF    0A.3
.................... DisplayFormat(); 
0BF4:  CALL   1A3
0BF5:  GOTO   362
.................... } 
.................... lcd_putc('\f');// 
0BF6:  MOVLW  0C
0BF7:  MOVWF  59
0BF8:  BCF    0A.3
0BF9:  CALL   108
0BFA:  BSF    0A.3
.................... Mesure(); 
0BFB:  BCF    0A.3
0BFC:  CALL   3CC
0BFD:  BSF    0A.3
.................... while(Current_bat >= Imin &&Voltage_bat>= (12.6*choice_bat))  
0BFE:  CLRF   4B
0BFF:  CLRF   4A
0C00:  CLRF   49
0C01:  MOVLW  7F
0C02:  MOVWF  48
0C03:  MOVF   31,W
0C04:  MOVWF  4F
0C05:  MOVF   30,W
0C06:  MOVWF  4E
0C07:  MOVF   2F,W
0C08:  MOVWF  4D
0C09:  MOVF   2E,W
0C0A:  MOVWF  4C
0C0B:  BCF    0A.3
0C0C:  CALL   6A9
0C0D:  BSF    0A.3
0C0E:  BTFSC  03.0
0C0F:  GOTO   412
0C10:  BTFSS  03.2
0C11:  GOTO   4AA
0C12:  CLRF   4D
0C13:  MOVF   47,W
0C14:  MOVWF  4C
0C15:  BCF    0A.3
0C16:  CALL   12F
0C17:  BSF    0A.3
0C18:  MOVLW  9A
0C19:  MOVWF  5C
0C1A:  MOVLW  99
0C1B:  MOVWF  5B
0C1C:  MOVLW  49
0C1D:  MOVWF  5A
0C1E:  MOVLW  82
0C1F:  MOVWF  59
0C20:  MOVF   7A,W
0C21:  MOVWF  60
0C22:  MOVF   79,W
0C23:  MOVWF  5F
0C24:  MOVF   78,W
0C25:  MOVWF  5E
0C26:  MOVF   77,W
0C27:  MOVWF  5D
0C28:  BCF    0A.3
0C29:  CALL   216
0C2A:  BSF    0A.3
0C2B:  MOVF   7A,W
0C2C:  MOVWF  4B
0C2D:  MOVF   79,W
0C2E:  MOVWF  4A
0C2F:  MOVF   78,W
0C30:  MOVWF  49
0C31:  MOVF   77,W
0C32:  MOVWF  48
0C33:  MOVF   29,W
0C34:  MOVWF  4F
0C35:  MOVF   28,W
0C36:  MOVWF  4E
0C37:  MOVF   27,W
0C38:  MOVWF  4D
0C39:  MOVF   26,W
0C3A:  MOVWF  4C
0C3B:  BCF    0A.3
0C3C:  CALL   6A9
0C3D:  BSF    0A.3
0C3E:  BTFSC  03.0
0C3F:  GOTO   442
0C40:  BTFSS  03.2
0C41:  GOTO   4AA
.................... { 
.................... lcd_putc('\f'); 
0C42:  MOVLW  0C
0C43:  MOVWF  59
0C44:  BCF    0A.3
0C45:  CALL   108
0C46:  BSF    0A.3
.................... Mesure(); 
0C47:  BCF    0A.3
0C48:  CALL   3CC
0C49:  BSF    0A.3
.................... Voltage_bat = Voltage_absorption; 
0C4A:  MOVF   3D,W
0C4B:  MOVWF  29
0C4C:  MOVF   3C,W
0C4D:  MOVWF  28
0C4E:  MOVF   3B,W
0C4F:  MOVWF  27
0C50:  MOVF   3A,W
0C51:  MOVWF  26
.................... alpha = Voltage_bat/Voltage_pv; 
0C52:  MOVF   29,W
0C53:  MOVWF  4B
0C54:  MOVF   28,W
0C55:  MOVWF  4A
0C56:  MOVF   27,W
0C57:  MOVWF  49
0C58:  MOVF   26,W
0C59:  MOVWF  48
0C5A:  MOVF   25,W
0C5B:  MOVWF  4F
0C5C:  MOVF   24,W
0C5D:  MOVWF  4E
0C5E:  MOVF   23,W
0C5F:  MOVWF  4D
0C60:  MOVF   22,W
0C61:  MOVWF  4C
0C62:  BCF    0A.3
0C63:  CALL   14C
0C64:  BSF    0A.3
0C65:  MOVF   7A,W
0C66:  MOVWF  45
0C67:  MOVF   79,W
0C68:  MOVWF  44
0C69:  MOVF   78,W
0C6A:  MOVWF  43
0C6B:  MOVF   77,W
0C6C:  MOVWF  42
.................... output_low(LED_RED); 
0C6D:  BCF    21.3
0C6E:  MOVF   21,W
0C6F:  BSF    03.5
0C70:  MOVWF  07
0C71:  BCF    03.5
0C72:  BCF    07.3
.................... output_low(LED_GREEN); 
0C73:  BCF    21.5
0C74:  MOVF   21,W
0C75:  BSF    03.5
0C76:  MOVWF  07
0C77:  BCF    03.5
0C78:  BCF    07.5
.................... output_high(LED_YELLOW); 
0C79:  BCF    21.4
0C7A:  MOVF   21,W
0C7B:  BSF    03.5
0C7C:  MOVWF  07
0C7D:  BCF    03.5
0C7E:  BSF    07.4
.................... pwm_on(); 
0C7F:  MOVLW  0C
0C80:  MOVWF  17
.................... duty = 1000*alpha; 
0C81:  CLRF   5C
0C82:  CLRF   5B
0C83:  MOVLW  7A
0C84:  MOVWF  5A
0C85:  MOVLW  88
0C86:  MOVWF  59
0C87:  MOVF   45,W
0C88:  MOVWF  60
0C89:  MOVF   44,W
0C8A:  MOVWF  5F
0C8B:  MOVF   43,W
0C8C:  MOVWF  5E
0C8D:  MOVF   42,W
0C8E:  MOVWF  5D
0C8F:  BCF    0A.3
0C90:  CALL   216
0C91:  BSF    0A.3
0C92:  MOVF   7A,W
0C93:  MOVWF  4B
0C94:  MOVF   79,W
0C95:  MOVWF  4A
0C96:  MOVF   78,W
0C97:  MOVWF  49
0C98:  MOVF   77,W
0C99:  MOVWF  48
0C9A:  BCF    0A.3
0C9B:  CALL   6E8
0C9C:  BSF    0A.3
0C9D:  MOVF   78,W
0C9E:  MOVWF  46
.................... pwm_set_duty_percent(duty); 
0C9F:  CLRF   49
0CA0:  MOVF   46,W
0CA1:  MOVWF  48
0CA2:  BCF    0A.3
0CA3:  CALL   756
0CA4:  BSF    0A.3
.................... DisplayFormat(); 
0CA5:  CALL   1A3
.................... Mesure(); 
0CA6:  BCF    0A.3
0CA7:  CALL   3CC
0CA8:  BSF    0A.3
0CA9:  GOTO   3FE
.................... } 
.................... Mesure(); 
0CAA:  BCF    0A.3
0CAB:  CALL   3CC
0CAC:  BSF    0A.3
.................... Delay_ms(500); 
0CAD:  MOVLW  02
0CAE:  MOVWF  48
0CAF:  MOVLW  FA
0CB0:  MOVWF  5A
0CB1:  BCF    0A.3
0CB2:  CALL   059
0CB3:  BSF    0A.3
0CB4:  DECFSZ 48,F
0CB5:  GOTO   4AF
.................... lcd_putc('\f'); 
0CB6:  MOVLW  0C
0CB7:  MOVWF  59
0CB8:  BCF    0A.3
0CB9:  CALL   108
0CBA:  BSF    0A.3
.................... while(Voltage_bat >= (12.6*choice_bat)) 
0CBB:  CLRF   4D
0CBC:  MOVF   47,W
0CBD:  MOVWF  4C
0CBE:  BCF    0A.3
0CBF:  CALL   12F
0CC0:  BSF    0A.3
0CC1:  MOVLW  9A
0CC2:  MOVWF  5C
0CC3:  MOVLW  99
0CC4:  MOVWF  5B
0CC5:  MOVLW  49
0CC6:  MOVWF  5A
0CC7:  MOVLW  82
0CC8:  MOVWF  59
0CC9:  MOVF   7A,W
0CCA:  MOVWF  60
0CCB:  MOVF   79,W
0CCC:  MOVWF  5F
0CCD:  MOVF   78,W
0CCE:  MOVWF  5E
0CCF:  MOVF   77,W
0CD0:  MOVWF  5D
0CD1:  BCF    0A.3
0CD2:  CALL   216
0CD3:  BSF    0A.3
0CD4:  MOVF   7A,W
0CD5:  MOVWF  4B
0CD6:  MOVF   79,W
0CD7:  MOVWF  4A
0CD8:  MOVF   78,W
0CD9:  MOVWF  49
0CDA:  MOVF   77,W
0CDB:  MOVWF  48
0CDC:  MOVF   29,W
0CDD:  MOVWF  4F
0CDE:  MOVF   28,W
0CDF:  MOVWF  4E
0CE0:  MOVF   27,W
0CE1:  MOVWF  4D
0CE2:  MOVF   26,W
0CE3:  MOVWF  4C
0CE4:  BCF    0A.3
0CE5:  CALL   6A9
0CE6:  BSF    0A.3
0CE7:  BTFSC  03.0
0CE8:  GOTO   4EB
0CE9:  BTFSS  03.2
0CEA:  GOTO   553
....................  { 
.................... lcd_putc('\f'); 
0CEB:  MOVLW  0C
0CEC:  MOVWF  59
0CED:  BCF    0A.3
0CEE:  CALL   108
0CEF:  BSF    0A.3
.................... Mesure(); 
0CF0:  BCF    0A.3
0CF1:  CALL   3CC
0CF2:  BSF    0A.3
.................... Voltage_bat = Voltage_float; 
0CF3:  MOVF   41,W
0CF4:  MOVWF  29
0CF5:  MOVF   40,W
0CF6:  MOVWF  28
0CF7:  MOVF   3F,W
0CF8:  MOVWF  27
0CF9:  MOVF   3E,W
0CFA:  MOVWF  26
.................... alpha = Voltage_bat/Voltage_pv; 
0CFB:  MOVF   29,W
0CFC:  MOVWF  4B
0CFD:  MOVF   28,W
0CFE:  MOVWF  4A
0CFF:  MOVF   27,W
0D00:  MOVWF  49
0D01:  MOVF   26,W
0D02:  MOVWF  48
0D03:  MOVF   25,W
0D04:  MOVWF  4F
0D05:  MOVF   24,W
0D06:  MOVWF  4E
0D07:  MOVF   23,W
0D08:  MOVWF  4D
0D09:  MOVF   22,W
0D0A:  MOVWF  4C
0D0B:  BCF    0A.3
0D0C:  CALL   14C
0D0D:  BSF    0A.3
0D0E:  MOVF   7A,W
0D0F:  MOVWF  45
0D10:  MOVF   79,W
0D11:  MOVWF  44
0D12:  MOVF   78,W
0D13:  MOVWF  43
0D14:  MOVF   77,W
0D15:  MOVWF  42
.................... output_low(LED_YELLOW); 
0D16:  BCF    21.4
0D17:  MOVF   21,W
0D18:  BSF    03.5
0D19:  MOVWF  07
0D1A:  BCF    03.5
0D1B:  BCF    07.4
.................... output_low(LED_RED); 
0D1C:  BCF    21.3
0D1D:  MOVF   21,W
0D1E:  BSF    03.5
0D1F:  MOVWF  07
0D20:  BCF    03.5
0D21:  BCF    07.3
.................... output_high(LED_GREEN); 
0D22:  BCF    21.5
0D23:  MOVF   21,W
0D24:  BSF    03.5
0D25:  MOVWF  07
0D26:  BCF    03.5
0D27:  BSF    07.5
.................... pwm_on(); 
0D28:  MOVLW  0C
0D29:  MOVWF  17
.................... duty = 1000*alpha; 
0D2A:  CLRF   5C
0D2B:  CLRF   5B
0D2C:  MOVLW  7A
0D2D:  MOVWF  5A
0D2E:  MOVLW  88
0D2F:  MOVWF  59
0D30:  MOVF   45,W
0D31:  MOVWF  60
0D32:  MOVF   44,W
0D33:  MOVWF  5F
0D34:  MOVF   43,W
0D35:  MOVWF  5E
0D36:  MOVF   42,W
0D37:  MOVWF  5D
0D38:  BCF    0A.3
0D39:  CALL   216
0D3A:  BSF    0A.3
0D3B:  MOVF   7A,W
0D3C:  MOVWF  4B
0D3D:  MOVF   79,W
0D3E:  MOVWF  4A
0D3F:  MOVF   78,W
0D40:  MOVWF  49
0D41:  MOVF   77,W
0D42:  MOVWF  48
0D43:  BCF    0A.3
0D44:  CALL   6E8
0D45:  BSF    0A.3
0D46:  MOVF   78,W
0D47:  MOVWF  46
.................... pwm_set_duty_percent(duty);//Viewing 
0D48:  CLRF   49
0D49:  MOVF   46,W
0D4A:  MOVWF  48
0D4B:  BCF    0A.3
0D4C:  CALL   756
0D4D:  BSF    0A.3
.................... DisplayFormat(); 
0D4E:  CALL   1A3
.................... Mesure(); 
0D4F:  BCF    0A.3
0D50:  CALL   3CC
0D51:  BSF    0A.3
0D52:  GOTO   4BB
.................... } 
.................... lcd_putc('\f'); 
0D53:  MOVLW  0C
0D54:  MOVWF  59
0D55:  BCF    0A.3
0D56:  CALL   108
0D57:  BSF    0A.3
.................... if(Voltage_bat < (12.6*choice_bat)) 
0D58:  CLRF   4D
0D59:  MOVF   47,W
0D5A:  MOVWF  4C
0D5B:  BCF    0A.3
0D5C:  CALL   12F
0D5D:  BSF    0A.3
0D5E:  MOVLW  9A
0D5F:  MOVWF  5C
0D60:  MOVLW  99
0D61:  MOVWF  5B
0D62:  MOVLW  49
0D63:  MOVWF  5A
0D64:  MOVLW  82
0D65:  MOVWF  59
0D66:  MOVF   7A,W
0D67:  MOVWF  60
0D68:  MOVF   79,W
0D69:  MOVWF  5F
0D6A:  MOVF   78,W
0D6B:  MOVWF  5E
0D6C:  MOVF   77,W
0D6D:  MOVWF  5D
0D6E:  BCF    0A.3
0D6F:  CALL   216
0D70:  BSF    0A.3
0D71:  MOVF   29,W
0D72:  MOVWF  4B
0D73:  MOVF   28,W
0D74:  MOVWF  4A
0D75:  MOVF   27,W
0D76:  MOVWF  49
0D77:  MOVF   26,W
0D78:  MOVWF  48
0D79:  MOVF   7A,W
0D7A:  MOVWF  4F
0D7B:  MOVF   79,W
0D7C:  MOVWF  4E
0D7D:  MOVF   78,W
0D7E:  MOVWF  4D
0D7F:  MOVF   77,W
0D80:  MOVWF  4C
0D81:  BCF    0A.3
0D82:  CALL   6A9
0D83:  BSF    0A.3
0D84:  BTFSS  03.0
0D85:  GOTO   602
.................... { 
.................... output_low(ON_OFF); 
0D86:  BCF    21.7
0D87:  MOVF   21,W
0D88:  BSF    03.5
0D89:  MOVWF  07
0D8A:  BCF    03.5
0D8B:  BCF    07.7
.................... alpha=1; 
0D8C:  CLRF   45
0D8D:  CLRF   44
0D8E:  CLRF   43
0D8F:  MOVLW  7F
0D90:  MOVWF  42
.................... pwm_on(); 
0D91:  MOVLW  0C
0D92:  MOVWF  17
.................... duty = 1000*alpha; 
0D93:  CLRF   5C
0D94:  CLRF   5B
0D95:  MOVLW  7A
0D96:  MOVWF  5A
0D97:  MOVLW  88
0D98:  MOVWF  59
0D99:  MOVF   45,W
0D9A:  MOVWF  60
0D9B:  MOVF   44,W
0D9C:  MOVWF  5F
0D9D:  MOVF   43,W
0D9E:  MOVWF  5E
0D9F:  MOVF   42,W
0DA0:  MOVWF  5D
0DA1:  BCF    0A.3
0DA2:  CALL   216
0DA3:  BSF    0A.3
0DA4:  MOVF   7A,W
0DA5:  MOVWF  4B
0DA6:  MOVF   79,W
0DA7:  MOVWF  4A
0DA8:  MOVF   78,W
0DA9:  MOVWF  49
0DAA:  MOVF   77,W
0DAB:  MOVWF  48
0DAC:  BCF    0A.3
0DAD:  CALL   6E8
0DAE:  BSF    0A.3
0DAF:  MOVF   78,W
0DB0:  MOVWF  46
.................... pwm_set_duty_percent(duty); 
0DB1:  CLRF   49
0DB2:  MOVF   46,W
0DB3:  MOVWF  48
0DB4:  BCF    0A.3
0DB5:  CALL   756
0DB6:  BSF    0A.3
.................... lcd_putc('\f'); //Clear LCD Screen 
0DB7:  MOVLW  0C
0DB8:  MOVWF  59
0DB9:  BCF    0A.3
0DBA:  CALL   108
0DBB:  BSF    0A.3
.................... lcd_putc("Excessive discharge"); 
0DBC:  MOVLW  46
0DBD:  BSF    03.6
0DBE:  MOVWF  0D
0DBF:  MOVLW  00
0DC0:  MOVWF  0F
0DC1:  BCF    03.6
0DC2:  CALL   149
.................... lcd_gotoxy(1,2); 
0DC3:  MOVLW  01
0DC4:  MOVWF  5A
0DC5:  MOVLW  02
0DC6:  MOVWF  5B
0DC7:  BCF    0A.3
0DC8:  CALL   0E6
0DC9:  BSF    0A.3
.................... lcd_putc("Load disconnected"); 
0DCA:  MOVLW  50
0DCB:  BSF    03.6
0DCC:  MOVWF  0D
0DCD:  MOVLW  00
0DCE:  MOVWF  0F
0DCF:  BCF    03.6
0DD0:  CALL   149
.................... Mesure(); 
0DD1:  BCF    0A.3
0DD2:  CALL   3CC
0DD3:  BSF    0A.3
.................... output_high(LED_YELLOW); 
0DD4:  BCF    21.4
0DD5:  MOVF   21,W
0DD6:  BSF    03.5
0DD7:  MOVWF  07
0DD8:  BCF    03.5
0DD9:  BSF    07.4
.................... output_high(LED_GREEN); 
0DDA:  BCF    21.5
0DDB:  MOVF   21,W
0DDC:  BSF    03.5
0DDD:  MOVWF  07
0DDE:  BCF    03.5
0DDF:  BSF    07.5
.................... output_high(LED_RED); 
0DE0:  BCF    21.3
0DE1:  MOVF   21,W
0DE2:  BSF    03.5
0DE3:  MOVWF  07
0DE4:  BCF    03.5
0DE5:  BSF    07.3
.................... Delay_ms(250); 
0DE6:  MOVLW  FA
0DE7:  MOVWF  5A
0DE8:  BCF    0A.3
0DE9:  CALL   059
0DEA:  BSF    0A.3
.................... output_low(LED_YELLOW); 
0DEB:  BCF    21.4
0DEC:  MOVF   21,W
0DED:  BSF    03.5
0DEE:  MOVWF  07
0DEF:  BCF    03.5
0DF0:  BCF    07.4
.................... output_low(LED_GREEN); 
0DF1:  BCF    21.5
0DF2:  MOVF   21,W
0DF3:  BSF    03.5
0DF4:  MOVWF  07
0DF5:  BCF    03.5
0DF6:  BCF    07.5
.................... output_low(LED_RED); 
0DF7:  BCF    21.3
0DF8:  MOVF   21,W
0DF9:  BSF    03.5
0DFA:  MOVWF  07
0DFB:  BCF    03.5
0DFC:  BCF    07.3
.................... Delay_ms(250); 
0DFD:  MOVLW  FA
0DFE:  MOVWF  5A
0DFF:  BCF    0A.3
0E00:  CALL   059
0E01:  BSF    0A.3
.................... } 
0E02:  GOTO   34A
.................... } 
.................... } 
0E03:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
